
// This file was generated by Shipshape

@file:Suppress("UNUSED_PARAMETER", "UNCHECKED_CAST")
package ai.hypergraph.kotlingrad.typelevel.binary

import kotlin.jvm.JvmName

sealed class B<X, P : B<X, P>>(open val x: X? = null) {
  val T: T<P> get() = T(this as P)
  val F: F<P> get() = F(this as P)

  abstract fun flip(): B<X, *>
  override fun equals(other: Any?) = toString() == other.toString()
  override fun hashCode() = this::class.hashCode() + x.hashCode()
  override fun toString() = "" + (x ?: "") + if (this is T) "1" else "0"
}

open class T<X>(override val x: X = Ø as X) : B<X, T<X>>(x) {
  companion object: T<Ø>(Ø)
  override fun flip(): F<X> = F(x)
}
open class F<X>(override val x: X = Ø as X) : B<X, F<X>>(x) {
  companion object: F<Ø>(Ø)
  override fun flip(): T<X> = T(x)
}

@Suppress("NonAsciiCharacters", "ClassName")
object Ø: B<Ø, Ø>(null) { override fun flip() = Ø }

fun B<*, *>.toInt(): Int = toInt(toString())
tailrec fun toInt(s: String, sum: Int = 0): Int =
  if (s.isEmpty()) sum else toInt(s.substring(1), (sum shl 1) + s[0].digitToInt())

/**
*     i │  0  1  …  k-1  k  │  k+1  k+2  …  k+c  │  k+c+1  …  k+c+k   
*    ───┼───────────────────┼────────────────────┼───────────────────┐ ┐
*     0 │                   │                    │                __/  │ 
*     1 │                   │                    │             __/XXX  │
*     … │       i ± i       │        k ± i       │          __/XXXXXX  ├ ┐
*   k-1 │                   │                    │      ___/XXXXXXXXX  │ │
*     k │                   │                    │  ___╱XXXXXXXXXXXXX  │ │
*   ────┼───────────────────┼────────────────────┴─┘XXXXXXXXXXXXXXXXX  ┘ │
*   k+1 │                   │XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX    │
*   k+2 │                   │XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX    │
*     … │       i ± k       │XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX    │
*     … │                   │XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX    │ 
*   k+c │                   │XXXXXXXXXXXX                XXXXXXXXXXXX    │
*  ─────┼───────────────────┤XXXXXXXXXXXX    Run-time    XXXXXXXXXXXX    │
* k+c+1 │               ___/XXXXXXXXXXXXX  type checked  XXXXXXXXXXXX    │
*     … │           ___/XXXXXXXXXXXXXXXXX                XXXXXXXXXXXX    │
*     … │       ___/XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX    │
*     … │   ___/XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX    │
* k+c+k │__/XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX    │
*                                                                      
*       └─────────┬─────────┘                               Compile-time
*                 └─────────────────────────────────────    type checked 
*/

// Left padded with 0, B_0N indicates a binary string *0{B_0N}
// Enumerate (max(2ⁱ-k, 0), 2ⁱ+k) ∀0≤i≤⌊log₂(k+c+k)⌋
// i.e.: {0, 1, 2, *(4-k, 4+k), *(8-k, 8+k), *(16-k, 16+k),..., *(2^⌊log₂(k+c+k)⌋-k, 2^⌊log₂(k+c+k)⌋+k)}

typealias B_0<B> = F<B>
typealias B_1<B> = T<B>
typealias B_2<B> = F<T<B>>
typealias B_3<B> = T<T<B>>
typealias B_4<B> = F<F<T<B>>>
typealias B_5<B> = T<F<T<B>>>
typealias B_6<B> = F<T<T<B>>>
typealias B_7<B> = T<T<T<B>>>
typealias B_8<B> = F<F<F<T<B>>>>
typealias B_9<B> = T<F<F<T<B>>>>
typealias B_10<B> = F<T<F<T<B>>>>
typealias B_11<B> = T<T<F<T<B>>>>
typealias B_12<B> = F<F<T<T<B>>>>
typealias B_13<B> = T<F<T<T<B>>>>
typealias B_14<B> = F<T<T<T<B>>>>
typealias B_15<B> = T<T<T<T<B>>>>
typealias B_16<B> = F<F<F<F<T<B>>>>>
typealias B_17<B> = T<F<F<F<T<B>>>>>
typealias B_18<B> = F<T<F<F<T<B>>>>>
typealias B_19<B> = T<T<F<F<T<B>>>>>
typealias B_20<B> = F<F<T<F<T<B>>>>>
typealias B_21<B> = T<F<T<F<T<B>>>>>
typealias B_26<B> = F<T<F<T<T<B>>>>>
typealias B_27<B> = T<T<F<T<T<B>>>>>
typealias B_28<B> = F<F<T<T<T<B>>>>>
typealias B_29<B> = T<F<T<T<T<B>>>>>
typealias B_30<B> = F<T<T<T<T<B>>>>>
typealias B_31<B> = T<T<T<T<T<B>>>>>
typealias B_32<B> = F<F<F<F<F<T<B>>>>>>
typealias B_33<B> = T<F<F<F<F<T<B>>>>>>
typealias B_34<B> = F<T<F<F<F<T<B>>>>>>
typealias B_35<B> = T<T<F<F<F<T<B>>>>>>
typealias B_36<B> = F<F<T<F<F<T<B>>>>>>
typealias B_37<B> = T<F<T<F<F<T<B>>>>>>
typealias B_58<B> = F<T<F<T<T<T<B>>>>>>
typealias B_59<B> = T<T<F<T<T<T<B>>>>>>
typealias B_60<B> = F<F<T<T<T<T<B>>>>>>
typealias B_61<B> = T<F<T<T<T<T<B>>>>>>
typealias B_62<B> = F<T<T<T<T<T<B>>>>>>
typealias B_63<B> = T<T<T<T<T<T<B>>>>>>
typealias B_64<B> = F<F<F<F<F<F<T<B>>>>>>>
typealias B_65<B> = T<F<F<F<F<F<T<B>>>>>>>
typealias B_66<B> = F<T<F<F<F<F<T<B>>>>>>>
typealias B_67<B> = T<T<F<F<F<F<T<B>>>>>>>
typealias B_68<B> = F<F<T<F<F<F<T<B>>>>>>>
typealias B_69<B> = T<F<T<F<F<F<T<B>>>>>>>
typealias B_122<B> = F<T<F<T<T<T<T<B>>>>>>>
typealias B_123<B> = T<T<F<T<T<T<T<B>>>>>>>
typealias B_124<B> = F<F<T<T<T<T<T<B>>>>>>>
typealias B_125<B> = T<F<T<T<T<T<T<B>>>>>>>
typealias B_126<B> = F<T<T<T<T<T<T<B>>>>>>>
typealias B_127<B> = T<T<T<T<T<T<T<B>>>>>>>
typealias B_128<B> = F<F<F<F<F<F<F<T<B>>>>>>>>
typealias B_129<B> = T<F<F<F<F<F<F<T<B>>>>>>>>
typealias B_130<B> = F<T<F<F<F<F<F<T<B>>>>>>>>
typealias B_131<B> = T<T<F<F<F<F<F<T<B>>>>>>>>
typealias B_132<B> = F<F<T<F<F<F<F<T<B>>>>>>>>
typealias B_133<B> = T<F<T<F<F<F<F<T<B>>>>>>>>

val B0: B_0<Ø> = F(Ø)
val B1: B_1<Ø> = T(Ø)
val B2: B_2<Ø> = T.F
val B3: B_3<Ø> = T.T
val B4: B_4<Ø> = T.F.F
val B5: B_5<Ø> = T.F.T
val B6: B_6<Ø> = T.T.F

@JvmName("bnp1") operator fun Ø.plus(t: T<Ø>) = B1
@JvmName("b0p1") operator fun B_0<Ø>.plus(t: T<Ø>) = B1
@JvmName("b1p1") operator fun B_1<Ø>.plus(t: T<Ø>): B_2<Ø> = F(x + B1)
@JvmName("b3p1") operator fun B_3<Ø>.plus(t: T<Ø>): B_4<Ø> = F(x + B1)
@JvmName("b7p1") operator fun B_7<Ø>.plus(t: T<Ø>): B_8<Ø> = F(x + B1)
@JvmName("b15p1") operator fun B_15<Ø>.plus(t: T<Ø>): B_16<Ø> = F(x + B1)
@JvmName("b31p1") operator fun B_31<Ø>.plus(t: T<Ø>): B_32<Ø> = F(x + B1)
@JvmName("b63p1") operator fun B_63<Ø>.plus(t: T<Ø>): B_64<Ø> = F(x + B1)
@JvmName("b127p1") operator fun B_127<Ø>.plus(t: T<Ø>): B_128<Ø> = F(x + B1)

@JvmName("b?0p1") operator fun <K: B<*, *>> B_0<K>.plus(t: T<Ø>) = T(x)
@JvmName("b?01p1") operator fun <K: B<*, *>> B_1<F<K>>.plus(t: T<Ø>) = F(x + B1)
@JvmName("b?03p1") operator fun <K: B<*, *>> B_3<F<K>>.plus(t: T<Ø>) = F(x + B1)
@JvmName("b?07p1") operator fun <K: B<*, *>> B_7<F<K>>.plus(t: T<Ø>) = F(x + B1)
@JvmName("b?015p1") operator fun <K: B<*, *>> B_15<F<K>>.plus(t: T<Ø>) = F(x + B1)
@JvmName("b?031p1") operator fun <K: B<*, *>> B_31<F<K>>.plus(t: T<Ø>) = F(x + B1)
@JvmName("b?063p1") operator fun <K: B<*, *>> B_63<F<K>>.plus(t: T<Ø>) = F(x + B1)
@JvmName("b?0127p1") operator fun <K: B<*, *>> B_127<F<K>>.plus(t: T<Ø>) = F(x + B1)

@JvmName("b1m1") operator fun B_1<Ø>.minus(t: T<Ø>): B_0<Ø> = B0
@JvmName("b2m1") operator fun B_2<Ø>.minus(t: T<Ø>): B_1<Ø> = B1
@JvmName("b4m1") operator fun B_4<Ø>.minus(t: T<Ø>): B_3<Ø> = T(x - B1)
@JvmName("b8m1") operator fun B_8<Ø>.minus(t: T<Ø>): B_7<Ø> = T(x - B1)
@JvmName("b16m1") operator fun B_16<Ø>.minus(t: T<Ø>): B_15<Ø> = T(x - B1)
@JvmName("b32m1") operator fun B_32<Ø>.minus(t: T<Ø>): B_31<Ø> = T(x - B1)
@JvmName("b64m1") operator fun B_64<Ø>.minus(t: T<Ø>): B_63<Ø> = T(x - B1)
@JvmName("b128m1") operator fun B_128<Ø>.minus(t: T<Ø>): B_127<Ø> = T(x - B1)

@JvmName("b?1p1") operator fun <K: B<*, *>> B_1<K>.minus(t: T<Ø>) = F(x)
@JvmName("b?2m1") operator fun <K: B<*, *>> B_2<K>.minus(t: T<Ø>) = T(x - B1)
@JvmName("b?4m1") operator fun <K: B<*, *>> B_4<K>.minus(t: T<Ø>) = T(x - B1)
@JvmName("b?8m1") operator fun <K: B<*, *>> B_8<K>.minus(t: T<Ø>) = T(x - B1)
@JvmName("b?16m1") operator fun <K: B<*, *>> B_16<K>.minus(t: T<Ø>) = T(x - B1)
@JvmName("b?32m1") operator fun <K: B<*, *>> B_32<K>.minus(t: T<Ø>) = T(x - B1)
@JvmName("b?64m1") operator fun <K: B<*, *>> B_64<K>.minus(t: T<Ø>) = T(x - B1)
@JvmName("b?128m1") operator fun <K: B<*, *>> B_128<K>.minus(t: T<Ø>) = T(x - B1)

@JvmName("b_p_") operator fun <K> K.plus(k: K) = F(k)
@JvmName("b_m_") operator fun <K> K.minus(k: K) = F(Ø)

@JvmName("bop0p2") operator fun B_0<Ø>.plus(r: B_2<Ø>): B_2<Ø> = plus(B1) + B1
@JvmName("bop1p2") operator fun B_1<Ø>.plus(r: B_2<Ø>): B_3<Ø> = plus(B1) + B1
@JvmName("bop2p2") operator fun B_2<Ø>.plus(r: B_2<Ø>): B_4<Ø> = plus(B1) + B1
@JvmName("bop3p2") operator fun B_3<Ø>.plus(r: B_2<Ø>): B_5<Ø> = plus(B1) + B1
@JvmName("bop6p2") operator fun B_6<Ø>.plus(r: B_2<Ø>): B_8<Ø> = plus(B1) + B1
@JvmName("bop7p2") operator fun B_7<Ø>.plus(r: B_2<Ø>): B_9<Ø> = plus(B1) + B1
@JvmName("bop14p2") operator fun B_14<Ø>.plus(r: B_2<Ø>): B_16<Ø> = plus(B1) + B1
@JvmName("bop15p2") operator fun B_15<Ø>.plus(r: B_2<Ø>): B_17<Ø> = plus(B1) + B1
@JvmName("bop30p2") operator fun B_30<Ø>.plus(r: B_2<Ø>): B_32<Ø> = plus(B1) + B1
@JvmName("bop31p2") operator fun B_31<Ø>.plus(r: B_2<Ø>): B_33<Ø> = plus(B1) + B1
@JvmName("bop62p2") operator fun B_62<Ø>.plus(r: B_2<Ø>): B_64<Ø> = plus(B1) + B1
@JvmName("bop63p2") operator fun B_63<Ø>.plus(r: B_2<Ø>): B_65<Ø> = plus(B1) + B1
@JvmName("bop126p2") operator fun B_126<Ø>.plus(r: B_2<Ø>): B_128<Ø> = plus(B1) + B1
@JvmName("bop127p2") operator fun B_127<Ø>.plus(r: B_2<Ø>): B_129<Ø> = plus(B1) + B1

@JvmName("bop?00p2") operator fun <K: B<*, *>> B_0<F<K>>.plus(r: B_2<Ø>) = plus(B1) + B1
@JvmName("bop?01p2") operator fun <K: B<*, *>> B_1<F<K>>.plus(r: B_2<Ø>) = plus(B1) + B1
@JvmName("bop?02p2") operator fun <K: B<*, *>> B_2<F<K>>.plus(r: B_2<Ø>) = plus(B1) + B1
@JvmName("bop?03p2") operator fun <K: B<*, *>> B_3<F<K>>.plus(r: B_2<Ø>) = plus(B1) + B1
@JvmName("bop?06p2") operator fun <K: B<*, *>> B_6<F<K>>.plus(r: B_2<Ø>) = plus(B1) + B1
@JvmName("bop?07p2") operator fun <K: B<*, *>> B_7<F<K>>.plus(r: B_2<Ø>) = plus(B1) + B1
@JvmName("bop?014p2") operator fun <K: B<*, *>> B_14<F<K>>.plus(r: B_2<Ø>) = plus(B1) + B1
@JvmName("bop?015p2") operator fun <K: B<*, *>> B_15<F<K>>.plus(r: B_2<Ø>) = plus(B1) + B1
@JvmName("bop?030p2") operator fun <K: B<*, *>> B_30<F<K>>.plus(r: B_2<Ø>) = plus(B1) + B1
@JvmName("bop?031p2") operator fun <K: B<*, *>> B_31<F<K>>.plus(r: B_2<Ø>) = plus(B1) + B1
@JvmName("bop?062p2") operator fun <K: B<*, *>> B_62<F<K>>.plus(r: B_2<Ø>) = plus(B1) + B1
@JvmName("bop?063p2") operator fun <K: B<*, *>> B_63<F<K>>.plus(r: B_2<Ø>) = plus(B1) + B1
@JvmName("bop?0126p2") operator fun <K: B<*, *>> B_126<F<K>>.plus(r: B_2<Ø>) = plus(B1) + B1
@JvmName("bop?0127p2") operator fun <K: B<*, *>> B_127<F<K>>.plus(r: B_2<Ø>) = plus(B1) + B1

@JvmName("bop2m2") operator fun B_2<Ø>.minus(r: B_2<Ø>): B_0<Ø> = minus(B1) - B1
@JvmName("bop3m2") operator fun B_3<Ø>.minus(r: B_2<Ø>): B_1<Ø> = minus(B1) - B1
@JvmName("bop4m2") operator fun B_4<Ø>.minus(r: B_2<Ø>): B_2<Ø> = minus(B1) - B1
@JvmName("bop5m2") operator fun B_5<Ø>.minus(r: B_2<Ø>): B_3<Ø> = minus(B1) - B1
@JvmName("bop8m2") operator fun B_8<Ø>.minus(r: B_2<Ø>): B_6<Ø> = minus(B1) - B1
@JvmName("bop9m2") operator fun B_9<Ø>.minus(r: B_2<Ø>): B_7<Ø> = minus(B1) - B1
@JvmName("bop16m2") operator fun B_16<Ø>.minus(r: B_2<Ø>): B_14<Ø> = minus(B1) - B1
@JvmName("bop17m2") operator fun B_17<Ø>.minus(r: B_2<Ø>): B_15<Ø> = minus(B1) - B1
@JvmName("bop32m2") operator fun B_32<Ø>.minus(r: B_2<Ø>): B_30<Ø> = minus(B1) - B1
@JvmName("bop33m2") operator fun B_33<Ø>.minus(r: B_2<Ø>): B_31<Ø> = minus(B1) - B1
@JvmName("bop64m2") operator fun B_64<Ø>.minus(r: B_2<Ø>): B_62<Ø> = minus(B1) - B1
@JvmName("bop65m2") operator fun B_65<Ø>.minus(r: B_2<Ø>): B_63<Ø> = minus(B1) - B1
@JvmName("bop128m2") operator fun B_128<Ø>.minus(r: B_2<Ø>): B_126<Ø> = minus(B1) - B1
@JvmName("bop129m2") operator fun B_129<Ø>.minus(r: B_2<Ø>): B_127<Ø> = minus(B1) - B1

@JvmName("bop?2m2") operator fun <K: B<*, *>> B_2<K>.minus(r: B_2<Ø>) = minus(B1) - B1
@JvmName("bop?3m2") operator fun <K: B<*, *>> B_3<K>.minus(r: B_2<Ø>) = minus(B1) - B1
@JvmName("bop?4m2") operator fun <K: B<*, *>> B_4<K>.minus(r: B_2<Ø>) = minus(B1) - B1
@JvmName("bop?5m2") operator fun <K: B<*, *>> B_5<K>.minus(r: B_2<Ø>) = minus(B1) - B1
@JvmName("bop?8m2") operator fun <K: B<*, *>> B_8<K>.minus(r: B_2<Ø>) = minus(B1) - B1
@JvmName("bop?9m2") operator fun <K: B<*, *>> B_9<K>.minus(r: B_2<Ø>) = minus(B1) - B1
@JvmName("bop?16m2") operator fun <K: B<*, *>> B_16<K>.minus(r: B_2<Ø>) = minus(B1) - B1
@JvmName("bop?17m2") operator fun <K: B<*, *>> B_17<K>.minus(r: B_2<Ø>) = minus(B1) - B1
@JvmName("bop?32m2") operator fun <K: B<*, *>> B_32<K>.minus(r: B_2<Ø>) = minus(B1) - B1
@JvmName("bop?33m2") operator fun <K: B<*, *>> B_33<K>.minus(r: B_2<Ø>) = minus(B1) - B1
@JvmName("bop?64m2") operator fun <K: B<*, *>> B_64<K>.minus(r: B_2<Ø>) = minus(B1) - B1
@JvmName("bop?65m2") operator fun <K: B<*, *>> B_65<K>.minus(r: B_2<Ø>) = minus(B1) - B1
@JvmName("bop?128m2") operator fun <K: B<*, *>> B_128<K>.minus(r: B_2<Ø>) = minus(B1) - B1
@JvmName("bop?129m2") operator fun <K: B<*, *>> B_129<K>.minus(r: B_2<Ø>) = minus(B1) - B1


@JvmName("bop0p3") operator fun B_0<Ø>.plus(r: B_3<Ø>): B_3<Ø> = plus(B2) + B1
@JvmName("bop1p3") operator fun B_1<Ø>.plus(r: B_3<Ø>): B_4<Ø> = plus(B2) + B1
@JvmName("bop2p3") operator fun B_2<Ø>.plus(r: B_3<Ø>): B_5<Ø> = plus(B2) + B1
@JvmName("bop3p3") operator fun B_3<Ø>.plus(r: B_3<Ø>): B_6<Ø> = plus(B2) + B1
@JvmName("bop5p3") operator fun B_5<Ø>.plus(r: B_3<Ø>): B_8<Ø> = plus(B2) + B1
@JvmName("bop6p3") operator fun B_6<Ø>.plus(r: B_3<Ø>): B_9<Ø> = plus(B2) + B1
@JvmName("bop7p3") operator fun B_7<Ø>.plus(r: B_3<Ø>): B_10<Ø> = plus(B2) + B1
@JvmName("bop13p3") operator fun B_13<Ø>.plus(r: B_3<Ø>): B_16<Ø> = plus(B2) + B1
@JvmName("bop14p3") operator fun B_14<Ø>.plus(r: B_3<Ø>): B_17<Ø> = plus(B2) + B1
@JvmName("bop15p3") operator fun B_15<Ø>.plus(r: B_3<Ø>): B_18<Ø> = plus(B2) + B1
@JvmName("bop29p3") operator fun B_29<Ø>.plus(r: B_3<Ø>): B_32<Ø> = plus(B2) + B1
@JvmName("bop30p3") operator fun B_30<Ø>.plus(r: B_3<Ø>): B_33<Ø> = plus(B2) + B1
@JvmName("bop31p3") operator fun B_31<Ø>.plus(r: B_3<Ø>): B_34<Ø> = plus(B2) + B1
@JvmName("bop61p3") operator fun B_61<Ø>.plus(r: B_3<Ø>): B_64<Ø> = plus(B2) + B1
@JvmName("bop62p3") operator fun B_62<Ø>.plus(r: B_3<Ø>): B_65<Ø> = plus(B2) + B1
@JvmName("bop63p3") operator fun B_63<Ø>.plus(r: B_3<Ø>): B_66<Ø> = plus(B2) + B1
@JvmName("bop125p3") operator fun B_125<Ø>.plus(r: B_3<Ø>): B_128<Ø> = plus(B2) + B1
@JvmName("bop126p3") operator fun B_126<Ø>.plus(r: B_3<Ø>): B_129<Ø> = plus(B2) + B1
@JvmName("bop127p3") operator fun B_127<Ø>.plus(r: B_3<Ø>): B_130<Ø> = plus(B2) + B1

@JvmName("bop?00p3") operator fun <K: B<*, *>> B_0<F<K>>.plus(r: B_3<Ø>) = plus(B2) + B1
@JvmName("bop?01p3") operator fun <K: B<*, *>> B_1<F<F<K>>>.plus(r: B_3<Ø>) = plus(B2) + B1
@JvmName("bop?02p3") operator fun <K: B<*, *>> B_2<F<K>>.plus(r: B_3<Ø>) = plus(B2) + B1
@JvmName("bop?03p3") operator fun <K: B<*, *>> B_3<F<K>>.plus(r: B_3<Ø>) = plus(B2) + B1
@JvmName("bop?05p3") operator fun <K: B<*, *>> B_5<F<K>>.plus(r: B_3<Ø>) = plus(B2) + B1
@JvmName("bop?06p3") operator fun <K: B<*, *>> B_6<F<K>>.plus(r: B_3<Ø>) = plus(B2) + B1
@JvmName("bop?07p3") operator fun <K: B<*, *>> B_7<F<K>>.plus(r: B_3<Ø>) = plus(B2) + B1
@JvmName("bop?013p3") operator fun <K: B<*, *>> B_13<F<K>>.plus(r: B_3<Ø>) = plus(B2) + B1
@JvmName("bop?014p3") operator fun <K: B<*, *>> B_14<F<K>>.plus(r: B_3<Ø>) = plus(B2) + B1
@JvmName("bop?015p3") operator fun <K: B<*, *>> B_15<F<K>>.plus(r: B_3<Ø>) = plus(B2) + B1
@JvmName("bop?029p3") operator fun <K: B<*, *>> B_29<F<K>>.plus(r: B_3<Ø>) = plus(B2) + B1
@JvmName("bop?030p3") operator fun <K: B<*, *>> B_30<F<K>>.plus(r: B_3<Ø>) = plus(B2) + B1
@JvmName("bop?031p3") operator fun <K: B<*, *>> B_31<F<K>>.plus(r: B_3<Ø>) = plus(B2) + B1
@JvmName("bop?061p3") operator fun <K: B<*, *>> B_61<F<K>>.plus(r: B_3<Ø>) = plus(B2) + B1
@JvmName("bop?062p3") operator fun <K: B<*, *>> B_62<F<K>>.plus(r: B_3<Ø>) = plus(B2) + B1
@JvmName("bop?063p3") operator fun <K: B<*, *>> B_63<F<K>>.plus(r: B_3<Ø>) = plus(B2) + B1
@JvmName("bop?0125p3") operator fun <K: B<*, *>> B_125<F<K>>.plus(r: B_3<Ø>) = plus(B2) + B1
@JvmName("bop?0126p3") operator fun <K: B<*, *>> B_126<F<K>>.plus(r: B_3<Ø>) = plus(B2) + B1
@JvmName("bop?0127p3") operator fun <K: B<*, *>> B_127<F<K>>.plus(r: B_3<Ø>) = plus(B2) + B1

@JvmName("bop3m3") operator fun B_3<Ø>.minus(r: B_3<Ø>): B_0<Ø> = minus(B2) - B1
@JvmName("bop4m3") operator fun B_4<Ø>.minus(r: B_3<Ø>): B_1<Ø> = minus(B2) - B1
@JvmName("bop5m3") operator fun B_5<Ø>.minus(r: B_3<Ø>): B_2<Ø> = minus(B2) - B1
@JvmName("bop6m3") operator fun B_6<Ø>.minus(r: B_3<Ø>): B_3<Ø> = minus(B2) - B1
@JvmName("bop8m3") operator fun B_8<Ø>.minus(r: B_3<Ø>): B_5<Ø> = minus(B2) - B1
@JvmName("bop9m3") operator fun B_9<Ø>.minus(r: B_3<Ø>): B_6<Ø> = minus(B2) - B1
@JvmName("bop10m3") operator fun B_10<Ø>.minus(r: B_3<Ø>): B_7<Ø> = minus(B2) - B1
@JvmName("bop16m3") operator fun B_16<Ø>.minus(r: B_3<Ø>): B_13<Ø> = minus(B2) - B1
@JvmName("bop17m3") operator fun B_17<Ø>.minus(r: B_3<Ø>): B_14<Ø> = minus(B2) - B1
@JvmName("bop18m3") operator fun B_18<Ø>.minus(r: B_3<Ø>): B_15<Ø> = minus(B2) - B1
@JvmName("bop32m3") operator fun B_32<Ø>.minus(r: B_3<Ø>): B_29<Ø> = minus(B2) - B1
@JvmName("bop33m3") operator fun B_33<Ø>.minus(r: B_3<Ø>): B_30<Ø> = minus(B2) - B1
@JvmName("bop34m3") operator fun B_34<Ø>.minus(r: B_3<Ø>): B_31<Ø> = minus(B2) - B1
@JvmName("bop64m3") operator fun B_64<Ø>.minus(r: B_3<Ø>): B_61<Ø> = minus(B2) - B1
@JvmName("bop65m3") operator fun B_65<Ø>.minus(r: B_3<Ø>): B_62<Ø> = minus(B2) - B1
@JvmName("bop66m3") operator fun B_66<Ø>.minus(r: B_3<Ø>): B_63<Ø> = minus(B2) - B1
@JvmName("bop128m3") operator fun B_128<Ø>.minus(r: B_3<Ø>): B_125<Ø> = minus(B2) - B1
@JvmName("bop129m3") operator fun B_129<Ø>.minus(r: B_3<Ø>): B_126<Ø> = minus(B2) - B1
@JvmName("bop130m3") operator fun B_130<Ø>.minus(r: B_3<Ø>): B_127<Ø> = minus(B2) - B1

@JvmName("bop?3m3") operator fun <K: B<*, *>> B_3<K>.minus(r: B_3<Ø>) = minus(B2) - B1
@JvmName("bop?4m3") operator fun <K: B<*, *>> B_4<K>.minus(r: B_3<Ø>) = minus(B2) - B1
@JvmName("bop?5m3") operator fun <K: B<*, *>> B_5<K>.minus(r: B_3<Ø>) = minus(B2) - B1
@JvmName("bop?6m3") operator fun <K: B<*, *>> B_6<K>.minus(r: B_3<Ø>) = minus(B2) - B1
@JvmName("bop?8m3") operator fun <K: B<*, *>> B_8<K>.minus(r: B_3<Ø>) = minus(B2) - B1
@JvmName("bop?9m3") operator fun <K: B<*, *>> B_9<K>.minus(r: B_3<Ø>) = minus(B2) - B1
@JvmName("bop?10m3") operator fun <K: B<*, *>> B_10<K>.minus(r: B_3<Ø>) = minus(B2) - B1
@JvmName("bop?16m3") operator fun <K: B<*, *>> B_16<K>.minus(r: B_3<Ø>) = minus(B2) - B1
@JvmName("bop?17m3") operator fun <K: B<*, *>> B_17<K>.minus(r: B_3<Ø>) = minus(B2) - B1
@JvmName("bop?18m3") operator fun <K: B<*, *>> B_18<K>.minus(r: B_3<Ø>) = minus(B2) - B1
@JvmName("bop?32m3") operator fun <K: B<*, *>> B_32<K>.minus(r: B_3<Ø>) = minus(B2) - B1
@JvmName("bop?33m3") operator fun <K: B<*, *>> B_33<K>.minus(r: B_3<Ø>) = minus(B2) - B1
@JvmName("bop?34m3") operator fun <K: B<*, *>> B_34<K>.minus(r: B_3<Ø>) = minus(B2) - B1
@JvmName("bop?64m3") operator fun <K: B<*, *>> B_64<K>.minus(r: B_3<Ø>) = minus(B2) - B1
@JvmName("bop?65m3") operator fun <K: B<*, *>> B_65<K>.minus(r: B_3<Ø>) = minus(B2) - B1
@JvmName("bop?66m3") operator fun <K: B<*, *>> B_66<K>.minus(r: B_3<Ø>) = minus(B2) - B1
@JvmName("bop?128m3") operator fun <K: B<*, *>> B_128<K>.minus(r: B_3<Ø>) = minus(B2) - B1
@JvmName("bop?129m3") operator fun <K: B<*, *>> B_129<K>.minus(r: B_3<Ø>) = minus(B2) - B1
@JvmName("bop?130m3") operator fun <K: B<*, *>> B_130<K>.minus(r: B_3<Ø>) = minus(B2) - B1


@JvmName("bop0p4") operator fun B_0<Ø>.plus(r: B_4<Ø>): B_4<Ø> = plus(B2) + B2
@JvmName("bop1p4") operator fun B_1<Ø>.plus(r: B_4<Ø>): B_5<Ø> = plus(B2) + B2
@JvmName("bop2p4") operator fun B_2<Ø>.plus(r: B_4<Ø>): B_6<Ø> = plus(B2) + B2
@JvmName("bop3p4") operator fun B_3<Ø>.plus(r: B_4<Ø>): B_7<Ø> = plus(B2) + B2
@JvmName("bop4p4") operator fun B_4<Ø>.plus(r: B_4<Ø>): B_8<Ø> = plus(B2) + B2
@JvmName("bop5p4") operator fun B_5<Ø>.plus(r: B_4<Ø>): B_9<Ø> = plus(B2) + B2
@JvmName("bop6p4") operator fun B_6<Ø>.plus(r: B_4<Ø>): B_10<Ø> = plus(B2) + B2
@JvmName("bop7p4") operator fun B_7<Ø>.plus(r: B_4<Ø>): B_11<Ø> = plus(B2) + B2
@JvmName("bop12p4") operator fun B_12<Ø>.plus(r: B_4<Ø>): B_16<Ø> = plus(B2) + B2
@JvmName("bop13p4") operator fun B_13<Ø>.plus(r: B_4<Ø>): B_17<Ø> = plus(B2) + B2
@JvmName("bop14p4") operator fun B_14<Ø>.plus(r: B_4<Ø>): B_18<Ø> = plus(B2) + B2
@JvmName("bop15p4") operator fun B_15<Ø>.plus(r: B_4<Ø>): B_19<Ø> = plus(B2) + B2
@JvmName("bop28p4") operator fun B_28<Ø>.plus(r: B_4<Ø>): B_32<Ø> = plus(B2) + B2
@JvmName("bop29p4") operator fun B_29<Ø>.plus(r: B_4<Ø>): B_33<Ø> = plus(B2) + B2
@JvmName("bop30p4") operator fun B_30<Ø>.plus(r: B_4<Ø>): B_34<Ø> = plus(B2) + B2
@JvmName("bop31p4") operator fun B_31<Ø>.plus(r: B_4<Ø>): B_35<Ø> = plus(B2) + B2
@JvmName("bop60p4") operator fun B_60<Ø>.plus(r: B_4<Ø>): B_64<Ø> = plus(B2) + B2
@JvmName("bop61p4") operator fun B_61<Ø>.plus(r: B_4<Ø>): B_65<Ø> = plus(B2) + B2
@JvmName("bop62p4") operator fun B_62<Ø>.plus(r: B_4<Ø>): B_66<Ø> = plus(B2) + B2
@JvmName("bop63p4") operator fun B_63<Ø>.plus(r: B_4<Ø>): B_67<Ø> = plus(B2) + B2
@JvmName("bop124p4") operator fun B_124<Ø>.plus(r: B_4<Ø>): B_128<Ø> = plus(B2) + B2
@JvmName("bop125p4") operator fun B_125<Ø>.plus(r: B_4<Ø>): B_129<Ø> = plus(B2) + B2
@JvmName("bop126p4") operator fun B_126<Ø>.plus(r: B_4<Ø>): B_130<Ø> = plus(B2) + B2
@JvmName("bop127p4") operator fun B_127<Ø>.plus(r: B_4<Ø>): B_131<Ø> = plus(B2) + B2

@JvmName("bop?00p4") operator fun <K: B<*, *>> B_0<F<F<K>>>.plus(r: B_4<Ø>) = plus(B2) + B2
@JvmName("bop?01p4") operator fun <K: B<*, *>> B_1<F<F<K>>>.plus(r: B_4<Ø>) = plus(B2) + B2
@JvmName("bop?02p4") operator fun <K: B<*, *>> B_2<F<K>>.plus(r: B_4<Ø>) = plus(B2) + B2
@JvmName("bop?03p4") operator fun <K: B<*, *>> B_3<F<K>>.plus(r: B_4<Ø>) = plus(B2) + B2
@JvmName("bop?04p4") operator fun <K: B<*, *>> B_4<F<K>>.plus(r: B_4<Ø>) = plus(B2) + B2
@JvmName("bop?05p4") operator fun <K: B<*, *>> B_5<F<K>>.plus(r: B_4<Ø>) = plus(B2) + B2
@JvmName("bop?06p4") operator fun <K: B<*, *>> B_6<F<K>>.plus(r: B_4<Ø>) = plus(B2) + B2
@JvmName("bop?07p4") operator fun <K: B<*, *>> B_7<F<K>>.plus(r: B_4<Ø>) = plus(B2) + B2
@JvmName("bop?012p4") operator fun <K: B<*, *>> B_12<F<K>>.plus(r: B_4<Ø>) = plus(B2) + B2
@JvmName("bop?013p4") operator fun <K: B<*, *>> B_13<F<K>>.plus(r: B_4<Ø>) = plus(B2) + B2
@JvmName("bop?014p4") operator fun <K: B<*, *>> B_14<F<K>>.plus(r: B_4<Ø>) = plus(B2) + B2
@JvmName("bop?015p4") operator fun <K: B<*, *>> B_15<F<K>>.plus(r: B_4<Ø>) = plus(B2) + B2
@JvmName("bop?028p4") operator fun <K: B<*, *>> B_28<F<K>>.plus(r: B_4<Ø>) = plus(B2) + B2
@JvmName("bop?029p4") operator fun <K: B<*, *>> B_29<F<K>>.plus(r: B_4<Ø>) = plus(B2) + B2
@JvmName("bop?030p4") operator fun <K: B<*, *>> B_30<F<K>>.plus(r: B_4<Ø>) = plus(B2) + B2
@JvmName("bop?031p4") operator fun <K: B<*, *>> B_31<F<K>>.plus(r: B_4<Ø>) = plus(B2) + B2
@JvmName("bop?060p4") operator fun <K: B<*, *>> B_60<F<K>>.plus(r: B_4<Ø>) = plus(B2) + B2
@JvmName("bop?061p4") operator fun <K: B<*, *>> B_61<F<K>>.plus(r: B_4<Ø>) = plus(B2) + B2
@JvmName("bop?062p4") operator fun <K: B<*, *>> B_62<F<K>>.plus(r: B_4<Ø>) = plus(B2) + B2
@JvmName("bop?063p4") operator fun <K: B<*, *>> B_63<F<K>>.plus(r: B_4<Ø>) = plus(B2) + B2
@JvmName("bop?0124p4") operator fun <K: B<*, *>> B_124<F<K>>.plus(r: B_4<Ø>) = plus(B2) + B2
@JvmName("bop?0125p4") operator fun <K: B<*, *>> B_125<F<K>>.plus(r: B_4<Ø>) = plus(B2) + B2
@JvmName("bop?0126p4") operator fun <K: B<*, *>> B_126<F<K>>.plus(r: B_4<Ø>) = plus(B2) + B2
@JvmName("bop?0127p4") operator fun <K: B<*, *>> B_127<F<K>>.plus(r: B_4<Ø>) = plus(B2) + B2

@JvmName("bop4m4") operator fun B_4<Ø>.minus(r: B_4<Ø>): B_0<Ø> = minus(B2) - B2
@JvmName("bop5m4") operator fun B_5<Ø>.minus(r: B_4<Ø>): B_1<Ø> = minus(B2) - B2
@JvmName("bop6m4") operator fun B_6<Ø>.minus(r: B_4<Ø>): B_2<Ø> = minus(B2) - B2
@JvmName("bop7m4") operator fun B_7<Ø>.minus(r: B_4<Ø>): B_3<Ø> = minus(B2) - B2
@JvmName("bop8m4") operator fun B_8<Ø>.minus(r: B_4<Ø>): B_4<Ø> = minus(B2) - B2
@JvmName("bop9m4") operator fun B_9<Ø>.minus(r: B_4<Ø>): B_5<Ø> = minus(B2) - B2
@JvmName("bop10m4") operator fun B_10<Ø>.minus(r: B_4<Ø>): B_6<Ø> = minus(B2) - B2
@JvmName("bop11m4") operator fun B_11<Ø>.minus(r: B_4<Ø>): B_7<Ø> = minus(B2) - B2
@JvmName("bop16m4") operator fun B_16<Ø>.minus(r: B_4<Ø>): B_12<Ø> = minus(B2) - B2
@JvmName("bop17m4") operator fun B_17<Ø>.minus(r: B_4<Ø>): B_13<Ø> = minus(B2) - B2
@JvmName("bop18m4") operator fun B_18<Ø>.minus(r: B_4<Ø>): B_14<Ø> = minus(B2) - B2
@JvmName("bop19m4") operator fun B_19<Ø>.minus(r: B_4<Ø>): B_15<Ø> = minus(B2) - B2
@JvmName("bop32m4") operator fun B_32<Ø>.minus(r: B_4<Ø>): B_28<Ø> = minus(B2) - B2
@JvmName("bop33m4") operator fun B_33<Ø>.minus(r: B_4<Ø>): B_29<Ø> = minus(B2) - B2
@JvmName("bop34m4") operator fun B_34<Ø>.minus(r: B_4<Ø>): B_30<Ø> = minus(B2) - B2
@JvmName("bop35m4") operator fun B_35<Ø>.minus(r: B_4<Ø>): B_31<Ø> = minus(B2) - B2
@JvmName("bop64m4") operator fun B_64<Ø>.minus(r: B_4<Ø>): B_60<Ø> = minus(B2) - B2
@JvmName("bop65m4") operator fun B_65<Ø>.minus(r: B_4<Ø>): B_61<Ø> = minus(B2) - B2
@JvmName("bop66m4") operator fun B_66<Ø>.minus(r: B_4<Ø>): B_62<Ø> = minus(B2) - B2
@JvmName("bop67m4") operator fun B_67<Ø>.minus(r: B_4<Ø>): B_63<Ø> = minus(B2) - B2
@JvmName("bop128m4") operator fun B_128<Ø>.minus(r: B_4<Ø>): B_124<Ø> = minus(B2) - B2
@JvmName("bop129m4") operator fun B_129<Ø>.minus(r: B_4<Ø>): B_125<Ø> = minus(B2) - B2
@JvmName("bop130m4") operator fun B_130<Ø>.minus(r: B_4<Ø>): B_126<Ø> = minus(B2) - B2
@JvmName("bop131m4") operator fun B_131<Ø>.minus(r: B_4<Ø>): B_127<Ø> = minus(B2) - B2

@JvmName("bop?4m4") operator fun <K: B<*, *>> B_4<K>.minus(r: B_4<Ø>) = minus(B2) - B2
@JvmName("bop?5m4") operator fun <K: B<*, *>> B_5<K>.minus(r: B_4<Ø>) = minus(B2) - B2
@JvmName("bop?6m4") operator fun <K: B<*, *>> B_6<K>.minus(r: B_4<Ø>) = minus(B2) - B2
@JvmName("bop?7m4") operator fun <K: B<*, *>> B_7<K>.minus(r: B_4<Ø>) = minus(B2) - B2
@JvmName("bop?8m4") operator fun <K: B<*, *>> B_8<K>.minus(r: B_4<Ø>) = minus(B2) - B2
@JvmName("bop?9m4") operator fun <K: B<*, *>> B_9<K>.minus(r: B_4<Ø>) = minus(B2) - B2
@JvmName("bop?10m4") operator fun <K: B<*, *>> B_10<K>.minus(r: B_4<Ø>) = minus(B2) - B2
@JvmName("bop?11m4") operator fun <K: B<*, *>> B_11<K>.minus(r: B_4<Ø>) = minus(B2) - B2
@JvmName("bop?16m4") operator fun <K: B<*, *>> B_16<K>.minus(r: B_4<Ø>) = minus(B2) - B2
@JvmName("bop?17m4") operator fun <K: B<*, *>> B_17<K>.minus(r: B_4<Ø>) = minus(B2) - B2
@JvmName("bop?18m4") operator fun <K: B<*, *>> B_18<K>.minus(r: B_4<Ø>) = minus(B2) - B2
@JvmName("bop?19m4") operator fun <K: B<*, *>> B_19<K>.minus(r: B_4<Ø>) = minus(B2) - B2
@JvmName("bop?32m4") operator fun <K: B<*, *>> B_32<K>.minus(r: B_4<Ø>) = minus(B2) - B2
@JvmName("bop?33m4") operator fun <K: B<*, *>> B_33<K>.minus(r: B_4<Ø>) = minus(B2) - B2
@JvmName("bop?34m4") operator fun <K: B<*, *>> B_34<K>.minus(r: B_4<Ø>) = minus(B2) - B2
@JvmName("bop?35m4") operator fun <K: B<*, *>> B_35<K>.minus(r: B_4<Ø>) = minus(B2) - B2
@JvmName("bop?64m4") operator fun <K: B<*, *>> B_64<K>.minus(r: B_4<Ø>) = minus(B2) - B2
@JvmName("bop?65m4") operator fun <K: B<*, *>> B_65<K>.minus(r: B_4<Ø>) = minus(B2) - B2
@JvmName("bop?66m4") operator fun <K: B<*, *>> B_66<K>.minus(r: B_4<Ø>) = minus(B2) - B2
@JvmName("bop?67m4") operator fun <K: B<*, *>> B_67<K>.minus(r: B_4<Ø>) = minus(B2) - B2
@JvmName("bop?128m4") operator fun <K: B<*, *>> B_128<K>.minus(r: B_4<Ø>) = minus(B2) - B2
@JvmName("bop?129m4") operator fun <K: B<*, *>> B_129<K>.minus(r: B_4<Ø>) = minus(B2) - B2
@JvmName("bop?130m4") operator fun <K: B<*, *>> B_130<K>.minus(r: B_4<Ø>) = minus(B2) - B2
@JvmName("bop?131m4") operator fun <K: B<*, *>> B_131<K>.minus(r: B_4<Ø>) = minus(B2) - B2


@JvmName("bop0p5") operator fun B_0<Ø>.plus(r: B_5<Ø>): B_5<Ø> = plus(B3) + B2
@JvmName("bop1p5") operator fun B_1<Ø>.plus(r: B_5<Ø>): B_6<Ø> = plus(B3) + B2
@JvmName("bop2p5") operator fun B_2<Ø>.plus(r: B_5<Ø>): B_7<Ø> = plus(B3) + B2
@JvmName("bop3p5") operator fun B_3<Ø>.plus(r: B_5<Ø>): B_8<Ø> = plus(B3) + B2
@JvmName("bop4p5") operator fun B_4<Ø>.plus(r: B_5<Ø>): B_9<Ø> = plus(B3) + B2
@JvmName("bop5p5") operator fun B_5<Ø>.plus(r: B_5<Ø>): B_10<Ø> = plus(B3) + B2
@JvmName("bop6p5") operator fun B_6<Ø>.plus(r: B_5<Ø>): B_11<Ø> = plus(B3) + B2
@JvmName("bop7p5") operator fun B_7<Ø>.plus(r: B_5<Ø>): B_12<Ø> = plus(B3) + B2
@JvmName("bop11p5") operator fun B_11<Ø>.plus(r: B_5<Ø>): B_16<Ø> = plus(B3) + B2
@JvmName("bop12p5") operator fun B_12<Ø>.plus(r: B_5<Ø>): B_17<Ø> = plus(B3) + B2
@JvmName("bop13p5") operator fun B_13<Ø>.plus(r: B_5<Ø>): B_18<Ø> = plus(B3) + B2
@JvmName("bop14p5") operator fun B_14<Ø>.plus(r: B_5<Ø>): B_19<Ø> = plus(B3) + B2
@JvmName("bop15p5") operator fun B_15<Ø>.plus(r: B_5<Ø>): B_20<Ø> = plus(B3) + B2
@JvmName("bop27p5") operator fun B_27<Ø>.plus(r: B_5<Ø>): B_32<Ø> = plus(B3) + B2
@JvmName("bop28p5") operator fun B_28<Ø>.plus(r: B_5<Ø>): B_33<Ø> = plus(B3) + B2
@JvmName("bop29p5") operator fun B_29<Ø>.plus(r: B_5<Ø>): B_34<Ø> = plus(B3) + B2
@JvmName("bop30p5") operator fun B_30<Ø>.plus(r: B_5<Ø>): B_35<Ø> = plus(B3) + B2
@JvmName("bop31p5") operator fun B_31<Ø>.plus(r: B_5<Ø>): B_36<Ø> = plus(B3) + B2
@JvmName("bop59p5") operator fun B_59<Ø>.plus(r: B_5<Ø>): B_64<Ø> = plus(B3) + B2
@JvmName("bop60p5") operator fun B_60<Ø>.plus(r: B_5<Ø>): B_65<Ø> = plus(B3) + B2
@JvmName("bop61p5") operator fun B_61<Ø>.plus(r: B_5<Ø>): B_66<Ø> = plus(B3) + B2
@JvmName("bop62p5") operator fun B_62<Ø>.plus(r: B_5<Ø>): B_67<Ø> = plus(B3) + B2
@JvmName("bop63p5") operator fun B_63<Ø>.plus(r: B_5<Ø>): B_68<Ø> = plus(B3) + B2
@JvmName("bop123p5") operator fun B_123<Ø>.plus(r: B_5<Ø>): B_128<Ø> = plus(B3) + B2
@JvmName("bop124p5") operator fun B_124<Ø>.plus(r: B_5<Ø>): B_129<Ø> = plus(B3) + B2
@JvmName("bop125p5") operator fun B_125<Ø>.plus(r: B_5<Ø>): B_130<Ø> = plus(B3) + B2
@JvmName("bop126p5") operator fun B_126<Ø>.plus(r: B_5<Ø>): B_131<Ø> = plus(B3) + B2
@JvmName("bop127p5") operator fun B_127<Ø>.plus(r: B_5<Ø>): B_132<Ø> = plus(B3) + B2

@JvmName("bop?00p5") operator fun <K: B<*, *>> B_0<F<F<K>>>.plus(r: B_5<Ø>) = plus(B3) + B2
@JvmName("bop?01p5") operator fun <K: B<*, *>> B_1<F<F<K>>>.plus(r: B_5<Ø>) = plus(B3) + B2
@JvmName("bop?02p5") operator fun <K: B<*, *>> B_2<F<K>>.plus(r: B_5<Ø>) = plus(B3) + B2
@JvmName("bop?03p5") operator fun <K: B<*, *>> B_3<F<F<K>>>.plus(r: B_5<Ø>) = plus(B3) + B2
@JvmName("bop?04p5") operator fun <K: B<*, *>> B_4<F<K>>.plus(r: B_5<Ø>) = plus(B3) + B2
@JvmName("bop?05p5") operator fun <K: B<*, *>> B_5<F<K>>.plus(r: B_5<Ø>) = plus(B3) + B2
@JvmName("bop?06p5") operator fun <K: B<*, *>> B_6<F<K>>.plus(r: B_5<Ø>) = plus(B3) + B2
@JvmName("bop?07p5") operator fun <K: B<*, *>> B_7<F<K>>.plus(r: B_5<Ø>) = plus(B3) + B2
@JvmName("bop?011p5") operator fun <K: B<*, *>> B_11<F<K>>.plus(r: B_5<Ø>) = plus(B3) + B2
@JvmName("bop?012p5") operator fun <K: B<*, *>> B_12<F<K>>.plus(r: B_5<Ø>) = plus(B3) + B2
@JvmName("bop?013p5") operator fun <K: B<*, *>> B_13<F<K>>.plus(r: B_5<Ø>) = plus(B3) + B2
@JvmName("bop?014p5") operator fun <K: B<*, *>> B_14<F<K>>.plus(r: B_5<Ø>) = plus(B3) + B2
@JvmName("bop?015p5") operator fun <K: B<*, *>> B_15<F<K>>.plus(r: B_5<Ø>) = plus(B3) + B2
@JvmName("bop?027p5") operator fun <K: B<*, *>> B_27<F<K>>.plus(r: B_5<Ø>) = plus(B3) + B2
@JvmName("bop?028p5") operator fun <K: B<*, *>> B_28<F<K>>.plus(r: B_5<Ø>) = plus(B3) + B2
@JvmName("bop?029p5") operator fun <K: B<*, *>> B_29<F<K>>.plus(r: B_5<Ø>) = plus(B3) + B2
@JvmName("bop?030p5") operator fun <K: B<*, *>> B_30<F<K>>.plus(r: B_5<Ø>) = plus(B3) + B2
@JvmName("bop?031p5") operator fun <K: B<*, *>> B_31<F<K>>.plus(r: B_5<Ø>) = plus(B3) + B2
@JvmName("bop?059p5") operator fun <K: B<*, *>> B_59<F<K>>.plus(r: B_5<Ø>) = plus(B3) + B2
@JvmName("bop?060p5") operator fun <K: B<*, *>> B_60<F<K>>.plus(r: B_5<Ø>) = plus(B3) + B2
@JvmName("bop?061p5") operator fun <K: B<*, *>> B_61<F<K>>.plus(r: B_5<Ø>) = plus(B3) + B2
@JvmName("bop?062p5") operator fun <K: B<*, *>> B_62<F<K>>.plus(r: B_5<Ø>) = plus(B3) + B2
@JvmName("bop?063p5") operator fun <K: B<*, *>> B_63<F<K>>.plus(r: B_5<Ø>) = plus(B3) + B2
@JvmName("bop?0123p5") operator fun <K: B<*, *>> B_123<F<K>>.plus(r: B_5<Ø>) = plus(B3) + B2
@JvmName("bop?0124p5") operator fun <K: B<*, *>> B_124<F<K>>.plus(r: B_5<Ø>) = plus(B3) + B2
@JvmName("bop?0125p5") operator fun <K: B<*, *>> B_125<F<K>>.plus(r: B_5<Ø>) = plus(B3) + B2
@JvmName("bop?0126p5") operator fun <K: B<*, *>> B_126<F<K>>.plus(r: B_5<Ø>) = plus(B3) + B2
@JvmName("bop?0127p5") operator fun <K: B<*, *>> B_127<F<K>>.plus(r: B_5<Ø>) = plus(B3) + B2

@JvmName("bop5m5") operator fun B_5<Ø>.minus(r: B_5<Ø>): B_0<Ø> = minus(B3) - B2
@JvmName("bop6m5") operator fun B_6<Ø>.minus(r: B_5<Ø>): B_1<Ø> = minus(B3) - B2
@JvmName("bop7m5") operator fun B_7<Ø>.minus(r: B_5<Ø>): B_2<Ø> = minus(B3) - B2
@JvmName("bop8m5") operator fun B_8<Ø>.minus(r: B_5<Ø>): B_3<Ø> = minus(B3) - B2
@JvmName("bop9m5") operator fun B_9<Ø>.minus(r: B_5<Ø>): B_4<Ø> = minus(B3) - B2
@JvmName("bop10m5") operator fun B_10<Ø>.minus(r: B_5<Ø>): B_5<Ø> = minus(B3) - B2
@JvmName("bop11m5") operator fun B_11<Ø>.minus(r: B_5<Ø>): B_6<Ø> = minus(B3) - B2
@JvmName("bop12m5") operator fun B_12<Ø>.minus(r: B_5<Ø>): B_7<Ø> = minus(B3) - B2
@JvmName("bop16m5") operator fun B_16<Ø>.minus(r: B_5<Ø>): B_11<Ø> = minus(B3) - B2
@JvmName("bop17m5") operator fun B_17<Ø>.minus(r: B_5<Ø>): B_12<Ø> = minus(B3) - B2
@JvmName("bop18m5") operator fun B_18<Ø>.minus(r: B_5<Ø>): B_13<Ø> = minus(B3) - B2
@JvmName("bop19m5") operator fun B_19<Ø>.minus(r: B_5<Ø>): B_14<Ø> = minus(B3) - B2
@JvmName("bop20m5") operator fun B_20<Ø>.minus(r: B_5<Ø>): B_15<Ø> = minus(B3) - B2
@JvmName("bop32m5") operator fun B_32<Ø>.minus(r: B_5<Ø>): B_27<Ø> = minus(B3) - B2
@JvmName("bop33m5") operator fun B_33<Ø>.minus(r: B_5<Ø>): B_28<Ø> = minus(B3) - B2
@JvmName("bop34m5") operator fun B_34<Ø>.minus(r: B_5<Ø>): B_29<Ø> = minus(B3) - B2
@JvmName("bop35m5") operator fun B_35<Ø>.minus(r: B_5<Ø>): B_30<Ø> = minus(B3) - B2
@JvmName("bop36m5") operator fun B_36<Ø>.minus(r: B_5<Ø>): B_31<Ø> = minus(B3) - B2
@JvmName("bop64m5") operator fun B_64<Ø>.minus(r: B_5<Ø>): B_59<Ø> = minus(B3) - B2
@JvmName("bop65m5") operator fun B_65<Ø>.minus(r: B_5<Ø>): B_60<Ø> = minus(B3) - B2
@JvmName("bop66m5") operator fun B_66<Ø>.minus(r: B_5<Ø>): B_61<Ø> = minus(B3) - B2
@JvmName("bop67m5") operator fun B_67<Ø>.minus(r: B_5<Ø>): B_62<Ø> = minus(B3) - B2
@JvmName("bop68m5") operator fun B_68<Ø>.minus(r: B_5<Ø>): B_63<Ø> = minus(B3) - B2
@JvmName("bop128m5") operator fun B_128<Ø>.minus(r: B_5<Ø>): B_123<Ø> = minus(B3) - B2
@JvmName("bop129m5") operator fun B_129<Ø>.minus(r: B_5<Ø>): B_124<Ø> = minus(B3) - B2
@JvmName("bop130m5") operator fun B_130<Ø>.minus(r: B_5<Ø>): B_125<Ø> = minus(B3) - B2
@JvmName("bop131m5") operator fun B_131<Ø>.minus(r: B_5<Ø>): B_126<Ø> = minus(B3) - B2
@JvmName("bop132m5") operator fun B_132<Ø>.minus(r: B_5<Ø>): B_127<Ø> = minus(B3) - B2

@JvmName("bop?5m5") operator fun <K: B<*, *>> B_5<K>.minus(r: B_5<Ø>) = minus(B3) - B2
@JvmName("bop?6m5") operator fun <K: B<*, *>> B_6<K>.minus(r: B_5<Ø>) = minus(B3) - B2
@JvmName("bop?7m5") operator fun <K: B<*, *>> B_7<K>.minus(r: B_5<Ø>) = minus(B3) - B2
@JvmName("bop?8m5") operator fun <K: B<*, *>> B_8<K>.minus(r: B_5<Ø>) = minus(B3) - B2
@JvmName("bop?9m5") operator fun <K: B<*, *>> B_9<K>.minus(r: B_5<Ø>) = minus(B3) - B2
@JvmName("bop?10m5") operator fun <K: B<*, *>> B_10<K>.minus(r: B_5<Ø>) = minus(B3) - B2
@JvmName("bop?11m5") operator fun <K: B<*, *>> B_11<K>.minus(r: B_5<Ø>) = minus(B3) - B2
@JvmName("bop?12m5") operator fun <K: B<*, *>> B_12<K>.minus(r: B_5<Ø>) = minus(B3) - B2
@JvmName("bop?16m5") operator fun <K: B<*, *>> B_16<K>.minus(r: B_5<Ø>) = minus(B3) - B2
@JvmName("bop?17m5") operator fun <K: B<*, *>> B_17<K>.minus(r: B_5<Ø>) = minus(B3) - B2
@JvmName("bop?18m5") operator fun <K: B<*, *>> B_18<K>.minus(r: B_5<Ø>) = minus(B3) - B2
@JvmName("bop?19m5") operator fun <K: B<*, *>> B_19<K>.minus(r: B_5<Ø>) = minus(B3) - B2
@JvmName("bop?20m5") operator fun <K: B<*, *>> B_20<K>.minus(r: B_5<Ø>) = minus(B3) - B2
@JvmName("bop?32m5") operator fun <K: B<*, *>> B_32<K>.minus(r: B_5<Ø>) = minus(B3) - B2
@JvmName("bop?33m5") operator fun <K: B<*, *>> B_33<K>.minus(r: B_5<Ø>) = minus(B3) - B2
@JvmName("bop?34m5") operator fun <K: B<*, *>> B_34<K>.minus(r: B_5<Ø>) = minus(B3) - B2
@JvmName("bop?35m5") operator fun <K: B<*, *>> B_35<K>.minus(r: B_5<Ø>) = minus(B3) - B2
@JvmName("bop?36m5") operator fun <K: B<*, *>> B_36<K>.minus(r: B_5<Ø>) = minus(B3) - B2
@JvmName("bop?64m5") operator fun <K: B<*, *>> B_64<K>.minus(r: B_5<Ø>) = minus(B3) - B2
@JvmName("bop?65m5") operator fun <K: B<*, *>> B_65<K>.minus(r: B_5<Ø>) = minus(B3) - B2
@JvmName("bop?66m5") operator fun <K: B<*, *>> B_66<K>.minus(r: B_5<Ø>) = minus(B3) - B2
@JvmName("bop?67m5") operator fun <K: B<*, *>> B_67<K>.minus(r: B_5<Ø>) = minus(B3) - B2
@JvmName("bop?68m5") operator fun <K: B<*, *>> B_68<K>.minus(r: B_5<Ø>) = minus(B3) - B2
@JvmName("bop?128m5") operator fun <K: B<*, *>> B_128<K>.minus(r: B_5<Ø>) = minus(B3) - B2
@JvmName("bop?129m5") operator fun <K: B<*, *>> B_129<K>.minus(r: B_5<Ø>) = minus(B3) - B2
@JvmName("bop?130m5") operator fun <K: B<*, *>> B_130<K>.minus(r: B_5<Ø>) = minus(B3) - B2
@JvmName("bop?131m5") operator fun <K: B<*, *>> B_131<K>.minus(r: B_5<Ø>) = minus(B3) - B2
@JvmName("bop?132m5") operator fun <K: B<*, *>> B_132<K>.minus(r: B_5<Ø>) = minus(B3) - B2


@JvmName("bop0p6") operator fun B_0<Ø>.plus(r: B_6<Ø>): B_6<Ø> = plus(B3) + B3
@JvmName("bop1p6") operator fun B_1<Ø>.plus(r: B_6<Ø>): B_7<Ø> = plus(B3) + B3
@JvmName("bop2p6") operator fun B_2<Ø>.plus(r: B_6<Ø>): B_8<Ø> = plus(B3) + B3
@JvmName("bop3p6") operator fun B_3<Ø>.plus(r: B_6<Ø>): B_9<Ø> = plus(B3) + B3
@JvmName("bop4p6") operator fun B_4<Ø>.plus(r: B_6<Ø>): B_10<Ø> = plus(B3) + B3
@JvmName("bop5p6") operator fun B_5<Ø>.plus(r: B_6<Ø>): B_11<Ø> = plus(B3) + B3
@JvmName("bop6p6") operator fun B_6<Ø>.plus(r: B_6<Ø>): B_12<Ø> = plus(B3) + B3
@JvmName("bop7p6") operator fun B_7<Ø>.plus(r: B_6<Ø>): B_13<Ø> = plus(B3) + B3
@JvmName("bop10p6") operator fun B_10<Ø>.plus(r: B_6<Ø>): B_16<Ø> = plus(B3) + B3
@JvmName("bop11p6") operator fun B_11<Ø>.plus(r: B_6<Ø>): B_17<Ø> = plus(B3) + B3
@JvmName("bop12p6") operator fun B_12<Ø>.plus(r: B_6<Ø>): B_18<Ø> = plus(B3) + B3
@JvmName("bop13p6") operator fun B_13<Ø>.plus(r: B_6<Ø>): B_19<Ø> = plus(B3) + B3
@JvmName("bop14p6") operator fun B_14<Ø>.plus(r: B_6<Ø>): B_20<Ø> = plus(B3) + B3
@JvmName("bop15p6") operator fun B_15<Ø>.plus(r: B_6<Ø>): B_21<Ø> = plus(B3) + B3
@JvmName("bop26p6") operator fun B_26<Ø>.plus(r: B_6<Ø>): B_32<Ø> = plus(B3) + B3
@JvmName("bop27p6") operator fun B_27<Ø>.plus(r: B_6<Ø>): B_33<Ø> = plus(B3) + B3
@JvmName("bop28p6") operator fun B_28<Ø>.plus(r: B_6<Ø>): B_34<Ø> = plus(B3) + B3
@JvmName("bop29p6") operator fun B_29<Ø>.plus(r: B_6<Ø>): B_35<Ø> = plus(B3) + B3
@JvmName("bop30p6") operator fun B_30<Ø>.plus(r: B_6<Ø>): B_36<Ø> = plus(B3) + B3
@JvmName("bop31p6") operator fun B_31<Ø>.plus(r: B_6<Ø>): B_37<Ø> = plus(B3) + B3
@JvmName("bop58p6") operator fun B_58<Ø>.plus(r: B_6<Ø>): B_64<Ø> = plus(B3) + B3
@JvmName("bop59p6") operator fun B_59<Ø>.plus(r: B_6<Ø>): B_65<Ø> = plus(B3) + B3
@JvmName("bop60p6") operator fun B_60<Ø>.plus(r: B_6<Ø>): B_66<Ø> = plus(B3) + B3
@JvmName("bop61p6") operator fun B_61<Ø>.plus(r: B_6<Ø>): B_67<Ø> = plus(B3) + B3
@JvmName("bop62p6") operator fun B_62<Ø>.plus(r: B_6<Ø>): B_68<Ø> = plus(B3) + B3
@JvmName("bop63p6") operator fun B_63<Ø>.plus(r: B_6<Ø>): B_69<Ø> = plus(B3) + B3
@JvmName("bop122p6") operator fun B_122<Ø>.plus(r: B_6<Ø>): B_128<Ø> = plus(B3) + B3
@JvmName("bop123p6") operator fun B_123<Ø>.plus(r: B_6<Ø>): B_129<Ø> = plus(B3) + B3
@JvmName("bop124p6") operator fun B_124<Ø>.plus(r: B_6<Ø>): B_130<Ø> = plus(B3) + B3
@JvmName("bop125p6") operator fun B_125<Ø>.plus(r: B_6<Ø>): B_131<Ø> = plus(B3) + B3
@JvmName("bop126p6") operator fun B_126<Ø>.plus(r: B_6<Ø>): B_132<Ø> = plus(B3) + B3
@JvmName("bop127p6") operator fun B_127<Ø>.plus(r: B_6<Ø>): B_133<Ø> = plus(B3) + B3

@JvmName("bop?00p6") operator fun <K: B<*, *>> B_0<F<F<K>>>.plus(r: B_6<Ø>) = plus(B3) + B3
@JvmName("bop?01p6") operator fun <K: B<*, *>> B_1<F<F<K>>>.plus(r: B_6<Ø>) = plus(B3) + B3
@JvmName("bop?02p6") operator fun <K: B<*, *>> B_2<F<F<K>>>.plus(r: B_6<Ø>) = plus(B3) + B3
@JvmName("bop?03p6") operator fun <K: B<*, *>> B_3<F<F<K>>>.plus(r: B_6<Ø>) = plus(B3) + B3
@JvmName("bop?04p6") operator fun <K: B<*, *>> B_4<F<K>>.plus(r: B_6<Ø>) = plus(B3) + B3
@JvmName("bop?05p6") operator fun <K: B<*, *>> B_5<F<K>>.plus(r: B_6<Ø>) = plus(B3) + B3
@JvmName("bop?06p6") operator fun <K: B<*, *>> B_6<F<K>>.plus(r: B_6<Ø>) = plus(B3) + B3
@JvmName("bop?07p6") operator fun <K: B<*, *>> B_7<F<K>>.plus(r: B_6<Ø>) = plus(B3) + B3
@JvmName("bop?010p6") operator fun <K: B<*, *>> B_10<F<K>>.plus(r: B_6<Ø>) = plus(B3) + B3
@JvmName("bop?011p6") operator fun <K: B<*, *>> B_11<F<K>>.plus(r: B_6<Ø>) = plus(B3) + B3
@JvmName("bop?012p6") operator fun <K: B<*, *>> B_12<F<K>>.plus(r: B_6<Ø>) = plus(B3) + B3
@JvmName("bop?013p6") operator fun <K: B<*, *>> B_13<F<K>>.plus(r: B_6<Ø>) = plus(B3) + B3
@JvmName("bop?014p6") operator fun <K: B<*, *>> B_14<F<K>>.plus(r: B_6<Ø>) = plus(B3) + B3
@JvmName("bop?015p6") operator fun <K: B<*, *>> B_15<F<K>>.plus(r: B_6<Ø>) = plus(B3) + B3
@JvmName("bop?026p6") operator fun <K: B<*, *>> B_26<F<K>>.plus(r: B_6<Ø>) = plus(B3) + B3
@JvmName("bop?027p6") operator fun <K: B<*, *>> B_27<F<K>>.plus(r: B_6<Ø>) = plus(B3) + B3
@JvmName("bop?028p6") operator fun <K: B<*, *>> B_28<F<K>>.plus(r: B_6<Ø>) = plus(B3) + B3
@JvmName("bop?029p6") operator fun <K: B<*, *>> B_29<F<K>>.plus(r: B_6<Ø>) = plus(B3) + B3
@JvmName("bop?030p6") operator fun <K: B<*, *>> B_30<F<K>>.plus(r: B_6<Ø>) = plus(B3) + B3
@JvmName("bop?031p6") operator fun <K: B<*, *>> B_31<F<K>>.plus(r: B_6<Ø>) = plus(B3) + B3
@JvmName("bop?058p6") operator fun <K: B<*, *>> B_58<F<K>>.plus(r: B_6<Ø>) = plus(B3) + B3
@JvmName("bop?059p6") operator fun <K: B<*, *>> B_59<F<K>>.plus(r: B_6<Ø>) = plus(B3) + B3
@JvmName("bop?060p6") operator fun <K: B<*, *>> B_60<F<K>>.plus(r: B_6<Ø>) = plus(B3) + B3
@JvmName("bop?061p6") operator fun <K: B<*, *>> B_61<F<K>>.plus(r: B_6<Ø>) = plus(B3) + B3
@JvmName("bop?062p6") operator fun <K: B<*, *>> B_62<F<K>>.plus(r: B_6<Ø>) = plus(B3) + B3
@JvmName("bop?063p6") operator fun <K: B<*, *>> B_63<F<K>>.plus(r: B_6<Ø>) = plus(B3) + B3
@JvmName("bop?0122p6") operator fun <K: B<*, *>> B_122<F<K>>.plus(r: B_6<Ø>) = plus(B3) + B3
@JvmName("bop?0123p6") operator fun <K: B<*, *>> B_123<F<K>>.plus(r: B_6<Ø>) = plus(B3) + B3
@JvmName("bop?0124p6") operator fun <K: B<*, *>> B_124<F<K>>.plus(r: B_6<Ø>) = plus(B3) + B3
@JvmName("bop?0125p6") operator fun <K: B<*, *>> B_125<F<K>>.plus(r: B_6<Ø>) = plus(B3) + B3
@JvmName("bop?0126p6") operator fun <K: B<*, *>> B_126<F<K>>.plus(r: B_6<Ø>) = plus(B3) + B3
@JvmName("bop?0127p6") operator fun <K: B<*, *>> B_127<F<K>>.plus(r: B_6<Ø>) = plus(B3) + B3

@JvmName("bop6m6") operator fun B_6<Ø>.minus(r: B_6<Ø>): B_0<Ø> = minus(B3) - B3
@JvmName("bop7m6") operator fun B_7<Ø>.minus(r: B_6<Ø>): B_1<Ø> = minus(B3) - B3
@JvmName("bop8m6") operator fun B_8<Ø>.minus(r: B_6<Ø>): B_2<Ø> = minus(B3) - B3
@JvmName("bop9m6") operator fun B_9<Ø>.minus(r: B_6<Ø>): B_3<Ø> = minus(B3) - B3
@JvmName("bop10m6") operator fun B_10<Ø>.minus(r: B_6<Ø>): B_4<Ø> = minus(B3) - B3
@JvmName("bop11m6") operator fun B_11<Ø>.minus(r: B_6<Ø>): B_5<Ø> = minus(B3) - B3
@JvmName("bop12m6") operator fun B_12<Ø>.minus(r: B_6<Ø>): B_6<Ø> = minus(B3) - B3
@JvmName("bop13m6") operator fun B_13<Ø>.minus(r: B_6<Ø>): B_7<Ø> = minus(B3) - B3
@JvmName("bop16m6") operator fun B_16<Ø>.minus(r: B_6<Ø>): B_10<Ø> = minus(B3) - B3
@JvmName("bop17m6") operator fun B_17<Ø>.minus(r: B_6<Ø>): B_11<Ø> = minus(B3) - B3
@JvmName("bop18m6") operator fun B_18<Ø>.minus(r: B_6<Ø>): B_12<Ø> = minus(B3) - B3
@JvmName("bop19m6") operator fun B_19<Ø>.minus(r: B_6<Ø>): B_13<Ø> = minus(B3) - B3
@JvmName("bop20m6") operator fun B_20<Ø>.minus(r: B_6<Ø>): B_14<Ø> = minus(B3) - B3
@JvmName("bop21m6") operator fun B_21<Ø>.minus(r: B_6<Ø>): B_15<Ø> = minus(B3) - B3
@JvmName("bop32m6") operator fun B_32<Ø>.minus(r: B_6<Ø>): B_26<Ø> = minus(B3) - B3
@JvmName("bop33m6") operator fun B_33<Ø>.minus(r: B_6<Ø>): B_27<Ø> = minus(B3) - B3
@JvmName("bop34m6") operator fun B_34<Ø>.minus(r: B_6<Ø>): B_28<Ø> = minus(B3) - B3
@JvmName("bop35m6") operator fun B_35<Ø>.minus(r: B_6<Ø>): B_29<Ø> = minus(B3) - B3
@JvmName("bop36m6") operator fun B_36<Ø>.minus(r: B_6<Ø>): B_30<Ø> = minus(B3) - B3
@JvmName("bop37m6") operator fun B_37<Ø>.minus(r: B_6<Ø>): B_31<Ø> = minus(B3) - B3
@JvmName("bop64m6") operator fun B_64<Ø>.minus(r: B_6<Ø>): B_58<Ø> = minus(B3) - B3
@JvmName("bop65m6") operator fun B_65<Ø>.minus(r: B_6<Ø>): B_59<Ø> = minus(B3) - B3
@JvmName("bop66m6") operator fun B_66<Ø>.minus(r: B_6<Ø>): B_60<Ø> = minus(B3) - B3
@JvmName("bop67m6") operator fun B_67<Ø>.minus(r: B_6<Ø>): B_61<Ø> = minus(B3) - B3
@JvmName("bop68m6") operator fun B_68<Ø>.minus(r: B_6<Ø>): B_62<Ø> = minus(B3) - B3
@JvmName("bop69m6") operator fun B_69<Ø>.minus(r: B_6<Ø>): B_63<Ø> = minus(B3) - B3
@JvmName("bop128m6") operator fun B_128<Ø>.minus(r: B_6<Ø>): B_122<Ø> = minus(B3) - B3
@JvmName("bop129m6") operator fun B_129<Ø>.minus(r: B_6<Ø>): B_123<Ø> = minus(B3) - B3
@JvmName("bop130m6") operator fun B_130<Ø>.minus(r: B_6<Ø>): B_124<Ø> = minus(B3) - B3
@JvmName("bop131m6") operator fun B_131<Ø>.minus(r: B_6<Ø>): B_125<Ø> = minus(B3) - B3
@JvmName("bop132m6") operator fun B_132<Ø>.minus(r: B_6<Ø>): B_126<Ø> = minus(B3) - B3
@JvmName("bop133m6") operator fun B_133<Ø>.minus(r: B_6<Ø>): B_127<Ø> = minus(B3) - B3

@JvmName("bop?6m6") operator fun <K: B<*, *>> B_6<K>.minus(r: B_6<Ø>) = minus(B3) - B3
@JvmName("bop?7m6") operator fun <K: B<*, *>> B_7<K>.minus(r: B_6<Ø>) = minus(B3) - B3
@JvmName("bop?8m6") operator fun <K: B<*, *>> B_8<K>.minus(r: B_6<Ø>) = minus(B3) - B3
@JvmName("bop?9m6") operator fun <K: B<*, *>> B_9<K>.minus(r: B_6<Ø>) = minus(B3) - B3
@JvmName("bop?10m6") operator fun <K: B<*, *>> B_10<K>.minus(r: B_6<Ø>) = minus(B3) - B3
@JvmName("bop?11m6") operator fun <K: B<*, *>> B_11<K>.minus(r: B_6<Ø>) = minus(B3) - B3
@JvmName("bop?12m6") operator fun <K: B<*, *>> B_12<K>.minus(r: B_6<Ø>) = minus(B3) - B3
@JvmName("bop?13m6") operator fun <K: B<*, *>> B_13<K>.minus(r: B_6<Ø>) = minus(B3) - B3
@JvmName("bop?16m6") operator fun <K: B<*, *>> B_16<K>.minus(r: B_6<Ø>) = minus(B3) - B3
@JvmName("bop?17m6") operator fun <K: B<*, *>> B_17<K>.minus(r: B_6<Ø>) = minus(B3) - B3
@JvmName("bop?18m6") operator fun <K: B<*, *>> B_18<K>.minus(r: B_6<Ø>) = minus(B3) - B3
@JvmName("bop?19m6") operator fun <K: B<*, *>> B_19<K>.minus(r: B_6<Ø>) = minus(B3) - B3
@JvmName("bop?20m6") operator fun <K: B<*, *>> B_20<K>.minus(r: B_6<Ø>) = minus(B3) - B3
@JvmName("bop?21m6") operator fun <K: B<*, *>> B_21<K>.minus(r: B_6<Ø>) = minus(B3) - B3
@JvmName("bop?32m6") operator fun <K: B<*, *>> B_32<K>.minus(r: B_6<Ø>) = minus(B3) - B3
@JvmName("bop?33m6") operator fun <K: B<*, *>> B_33<K>.minus(r: B_6<Ø>) = minus(B3) - B3
@JvmName("bop?34m6") operator fun <K: B<*, *>> B_34<K>.minus(r: B_6<Ø>) = minus(B3) - B3
@JvmName("bop?35m6") operator fun <K: B<*, *>> B_35<K>.minus(r: B_6<Ø>) = minus(B3) - B3
@JvmName("bop?36m6") operator fun <K: B<*, *>> B_36<K>.minus(r: B_6<Ø>) = minus(B3) - B3
@JvmName("bop?37m6") operator fun <K: B<*, *>> B_37<K>.minus(r: B_6<Ø>) = minus(B3) - B3
@JvmName("bop?64m6") operator fun <K: B<*, *>> B_64<K>.minus(r: B_6<Ø>) = minus(B3) - B3
@JvmName("bop?65m6") operator fun <K: B<*, *>> B_65<K>.minus(r: B_6<Ø>) = minus(B3) - B3
@JvmName("bop?66m6") operator fun <K: B<*, *>> B_66<K>.minus(r: B_6<Ø>) = minus(B3) - B3
@JvmName("bop?67m6") operator fun <K: B<*, *>> B_67<K>.minus(r: B_6<Ø>) = minus(B3) - B3
@JvmName("bop?68m6") operator fun <K: B<*, *>> B_68<K>.minus(r: B_6<Ø>) = minus(B3) - B3
@JvmName("bop?69m6") operator fun <K: B<*, *>> B_69<K>.minus(r: B_6<Ø>) = minus(B3) - B3
@JvmName("bop?128m6") operator fun <K: B<*, *>> B_128<K>.minus(r: B_6<Ø>) = minus(B3) - B3
@JvmName("bop?129m6") operator fun <K: B<*, *>> B_129<K>.minus(r: B_6<Ø>) = minus(B3) - B3
@JvmName("bop?130m6") operator fun <K: B<*, *>> B_130<K>.minus(r: B_6<Ø>) = minus(B3) - B3
@JvmName("bop?131m6") operator fun <K: B<*, *>> B_131<K>.minus(r: B_6<Ø>) = minus(B3) - B3
@JvmName("bop?132m6") operator fun <K: B<*, *>> B_132<K>.minus(r: B_6<Ø>) = minus(B3) - B3
@JvmName("bop?133m6") operator fun <K: B<*, *>> B_133<K>.minus(r: B_6<Ø>) = minus(B3) - B3


@JvmName("b_t0") operator fun <K: B<*, *>> K.times(t: F<Ø>) = t
@JvmName("b0t_") operator fun <K: B<*, *>> F<Ø>.times(t: K) = this
@JvmName("b_t1") operator fun <K: B<*, *>> K.times(t: T<Ø>) = this
@JvmName("b1t_") operator fun <K: B<*, *>> T<Ø>.times(t: K) = t
@JvmName("b_t2") operator fun <K: B<*, *>> K.times(t: B_2<Ø>) = F(this)
@JvmName("b2t_") operator fun <K: B<*, *>> B_2<Ø>.times(t: K) = F(t)
@JvmName("b_t4") operator fun <K: B<*, *>> K.times(t: B_4<Ø>) = F(F(this))
@JvmName("b4t_") operator fun <K: B<*, *>> B_4<Ø>.times(t: K) = F(F(t))
@JvmName("b_t8") operator fun <K: B<*, *>> K.times(t: B_8<Ø>) = F(F(F(this)))
@JvmName("b8t_") operator fun <K: B<*, *>> B_8<Ø>.times(t: K) = F(F(F(t)))
@JvmName("b_t16") operator fun <K: B<*, *>> K.times(t: B_16<Ø>) = F(F(F(F(this))))
@JvmName("b16t_") operator fun <K: B<*, *>> B_16<Ø>.times(t: K) = F(F(F(F(t))))

@JvmName("b3t3") operator fun B_3<Ø>.times(t: B_3<Ø>) = T(F(F(T(Ø))))
@JvmName("b3t5") operator fun B_3<Ø>.times(t: B_5<Ø>) = T(T(T(T(Ø))))
@JvmName("b3t6") operator fun B_3<Ø>.times(t: B_6<Ø>) = F(T(F(F(T(Ø)))))
@JvmName("b3t7") operator fun B_3<Ø>.times(t: B_7<Ø>) = T(F(T(F(T(Ø)))))
@JvmName("b3t9") operator fun B_3<Ø>.times(t: B_9<Ø>) = T(T(F(T(T(Ø)))))
@JvmName("b3t10") operator fun B_3<Ø>.times(t: B_10<Ø>) = F(T(T(T(T(Ø)))))
@JvmName("b3t11") operator fun B_3<Ø>.times(t: B_11<Ø>) = T(F(F(F(F(T(Ø))))))
@JvmName("b3t12") operator fun B_3<Ø>.times(t: B_12<Ø>) = F(F(T(F(F(T(Ø))))))
@JvmName("b3t13") operator fun B_3<Ø>.times(t: B_13<Ø>) = T(T(T(F(F(T(Ø))))))
@JvmName("b3t14") operator fun B_3<Ø>.times(t: B_14<Ø>) = F(T(F(T(F(T(Ø))))))
@JvmName("b3t15") operator fun B_3<Ø>.times(t: B_15<Ø>) = T(F(T(T(F(T(Ø))))))
@JvmName("b5t3") operator fun B_5<Ø>.times(t: B_3<Ø>) = T(T(T(T(Ø))))
@JvmName("b5t5") operator fun B_5<Ø>.times(t: B_5<Ø>) = T(F(F(T(T(Ø)))))
@JvmName("b5t6") operator fun B_5<Ø>.times(t: B_6<Ø>) = F(T(T(T(T(Ø)))))
@JvmName("b5t7") operator fun B_5<Ø>.times(t: B_7<Ø>) = T(T(F(F(F(T(Ø))))))
@JvmName("b5t9") operator fun B_5<Ø>.times(t: B_9<Ø>) = T(F(T(T(F(T(Ø))))))
@JvmName("b5t10") operator fun B_5<Ø>.times(t: B_10<Ø>) = F(T(F(F(T(T(Ø))))))
@JvmName("b5t11") operator fun B_5<Ø>.times(t: B_11<Ø>) = T(T(T(F(T(T(Ø))))))
@JvmName("b5t12") operator fun B_5<Ø>.times(t: B_12<Ø>) = F(F(T(T(T(T(Ø))))))
@JvmName("b5t13") operator fun B_5<Ø>.times(t: B_13<Ø>) = T(F(F(F(F(F(T(Ø)))))))
@JvmName("b5t14") operator fun B_5<Ø>.times(t: B_14<Ø>) = F(T(T(F(F(F(T(Ø)))))))
@JvmName("b5t15") operator fun B_5<Ø>.times(t: B_15<Ø>) = T(T(F(T(F(F(T(Ø)))))))
@JvmName("b6t3") operator fun B_6<Ø>.times(t: B_3<Ø>) = F(T(F(F(T(Ø)))))
@JvmName("b6t5") operator fun B_6<Ø>.times(t: B_5<Ø>) = F(T(T(T(T(Ø)))))
@JvmName("b6t6") operator fun B_6<Ø>.times(t: B_6<Ø>) = F(F(T(F(F(T(Ø))))))
@JvmName("b6t7") operator fun B_6<Ø>.times(t: B_7<Ø>) = F(T(F(T(F(T(Ø))))))
@JvmName("b6t9") operator fun B_6<Ø>.times(t: B_9<Ø>) = F(T(T(F(T(T(Ø))))))
@JvmName("b6t10") operator fun B_6<Ø>.times(t: B_10<Ø>) = F(F(T(T(T(T(Ø))))))
@JvmName("b6t11") operator fun B_6<Ø>.times(t: B_11<Ø>) = F(T(F(F(F(F(T(Ø)))))))
@JvmName("b6t12") operator fun B_6<Ø>.times(t: B_12<Ø>) = F(F(F(T(F(F(T(Ø)))))))
@JvmName("b6t13") operator fun B_6<Ø>.times(t: B_13<Ø>) = F(T(T(T(F(F(T(Ø)))))))
@JvmName("b6t14") operator fun B_6<Ø>.times(t: B_14<Ø>) = F(F(T(F(T(F(T(Ø)))))))
@JvmName("b6t15") operator fun B_6<Ø>.times(t: B_15<Ø>) = F(T(F(T(T(F(T(Ø)))))))
@JvmName("b7t3") operator fun B_7<Ø>.times(t: B_3<Ø>) = T(F(T(F(T(Ø)))))
@JvmName("b7t5") operator fun B_7<Ø>.times(t: B_5<Ø>) = T(T(F(F(F(T(Ø))))))
@JvmName("b7t6") operator fun B_7<Ø>.times(t: B_6<Ø>) = F(T(F(T(F(T(Ø))))))
@JvmName("b7t7") operator fun B_7<Ø>.times(t: B_7<Ø>) = T(F(F(F(T(T(Ø))))))
@JvmName("b7t9") operator fun B_7<Ø>.times(t: B_9<Ø>) = T(T(T(T(T(T(Ø))))))
@JvmName("b7t10") operator fun B_7<Ø>.times(t: B_10<Ø>) = F(T(T(F(F(F(T(Ø)))))))
@JvmName("b7t11") operator fun B_7<Ø>.times(t: B_11<Ø>) = T(F(T(T(F(F(T(Ø)))))))
@JvmName("b7t12") operator fun B_7<Ø>.times(t: B_12<Ø>) = F(F(T(F(T(F(T(Ø)))))))
@JvmName("b7t13") operator fun B_7<Ø>.times(t: B_13<Ø>) = T(T(F(T(T(F(T(Ø)))))))
@JvmName("b7t14") operator fun B_7<Ø>.times(t: B_14<Ø>) = F(T(F(F(F(T(T(Ø)))))))
@JvmName("b7t15") operator fun B_7<Ø>.times(t: B_15<Ø>) = T(F(F(T(F(T(T(Ø)))))))
@JvmName("b9t3") operator fun B_9<Ø>.times(t: B_3<Ø>) = T(T(F(T(T(Ø)))))
@JvmName("b9t5") operator fun B_9<Ø>.times(t: B_5<Ø>) = T(F(T(T(F(T(Ø))))))
@JvmName("b9t6") operator fun B_9<Ø>.times(t: B_6<Ø>) = F(T(T(F(T(T(Ø))))))
@JvmName("b9t7") operator fun B_9<Ø>.times(t: B_7<Ø>) = T(T(T(T(T(T(Ø))))))
@JvmName("b9t9") operator fun B_9<Ø>.times(t: B_9<Ø>) = T(F(F(F(T(F(T(Ø)))))))
@JvmName("b9t10") operator fun B_9<Ø>.times(t: B_10<Ø>) = F(T(F(T(T(F(T(Ø)))))))
@JvmName("b9t11") operator fun B_9<Ø>.times(t: B_11<Ø>) = T(T(F(F(F(T(T(Ø)))))))
@JvmName("b9t12") operator fun B_9<Ø>.times(t: B_12<Ø>) = F(F(T(T(F(T(T(Ø)))))))
@JvmName("b9t13") operator fun B_9<Ø>.times(t: B_13<Ø>) = T(F(T(F(T(T(T(Ø)))))))
@JvmName("b9t14") operator fun B_9<Ø>.times(t: B_14<Ø>) = F(T(T(T(T(T(T(Ø)))))))
@JvmName("b9t15") operator fun B_9<Ø>.times(t: B_15<Ø>) = T(T(T(F(F(F(F(T(Ø))))))))
@JvmName("b10t3") operator fun B_10<Ø>.times(t: B_3<Ø>) = F(T(T(T(T(Ø)))))
@JvmName("b10t5") operator fun B_10<Ø>.times(t: B_5<Ø>) = F(T(F(F(T(T(Ø))))))
@JvmName("b10t6") operator fun B_10<Ø>.times(t: B_6<Ø>) = F(F(T(T(T(T(Ø))))))
@JvmName("b10t7") operator fun B_10<Ø>.times(t: B_7<Ø>) = F(T(T(F(F(F(T(Ø)))))))
@JvmName("b10t9") operator fun B_10<Ø>.times(t: B_9<Ø>) = F(T(F(T(T(F(T(Ø)))))))
@JvmName("b10t10") operator fun B_10<Ø>.times(t: B_10<Ø>) = F(F(T(F(F(T(T(Ø)))))))
@JvmName("b10t11") operator fun B_10<Ø>.times(t: B_11<Ø>) = F(T(T(T(F(T(T(Ø)))))))
@JvmName("b10t12") operator fun B_10<Ø>.times(t: B_12<Ø>) = F(F(F(T(T(T(T(Ø)))))))
@JvmName("b10t13") operator fun B_10<Ø>.times(t: B_13<Ø>) = F(T(F(F(F(F(F(T(Ø))))))))
@JvmName("b10t14") operator fun B_10<Ø>.times(t: B_14<Ø>) = F(F(T(T(F(F(F(T(Ø))))))))
@JvmName("b10t15") operator fun B_10<Ø>.times(t: B_15<Ø>) = F(T(T(F(T(F(F(T(Ø))))))))
@JvmName("b11t3") operator fun B_11<Ø>.times(t: B_3<Ø>) = T(F(F(F(F(T(Ø))))))
@JvmName("b11t5") operator fun B_11<Ø>.times(t: B_5<Ø>) = T(T(T(F(T(T(Ø))))))
@JvmName("b11t6") operator fun B_11<Ø>.times(t: B_6<Ø>) = F(T(F(F(F(F(T(Ø)))))))
@JvmName("b11t7") operator fun B_11<Ø>.times(t: B_7<Ø>) = T(F(T(T(F(F(T(Ø)))))))
@JvmName("b11t9") operator fun B_11<Ø>.times(t: B_9<Ø>) = T(T(F(F(F(T(T(Ø)))))))
@JvmName("b11t10") operator fun B_11<Ø>.times(t: B_10<Ø>) = F(T(T(T(F(T(T(Ø)))))))
@JvmName("b11t11") operator fun B_11<Ø>.times(t: B_11<Ø>) = T(F(F(T(T(T(T(Ø)))))))
@JvmName("b11t12") operator fun B_11<Ø>.times(t: B_12<Ø>) = F(F(T(F(F(F(F(T(Ø))))))))
@JvmName("b11t13") operator fun B_11<Ø>.times(t: B_13<Ø>) = T(T(T(T(F(F(F(T(Ø))))))))
@JvmName("b11t14") operator fun B_11<Ø>.times(t: B_14<Ø>) = F(T(F(T(T(F(F(T(Ø))))))))
@JvmName("b11t15") operator fun B_11<Ø>.times(t: B_15<Ø>) = T(F(T(F(F(T(F(T(Ø))))))))
@JvmName("b12t3") operator fun B_12<Ø>.times(t: B_3<Ø>) = F(F(T(F(F(T(Ø))))))
@JvmName("b12t5") operator fun B_12<Ø>.times(t: B_5<Ø>) = F(F(T(T(T(T(Ø))))))
@JvmName("b12t6") operator fun B_12<Ø>.times(t: B_6<Ø>) = F(F(F(T(F(F(T(Ø)))))))
@JvmName("b12t7") operator fun B_12<Ø>.times(t: B_7<Ø>) = F(F(T(F(T(F(T(Ø)))))))
@JvmName("b12t9") operator fun B_12<Ø>.times(t: B_9<Ø>) = F(F(T(T(F(T(T(Ø)))))))
@JvmName("b12t10") operator fun B_12<Ø>.times(t: B_10<Ø>) = F(F(F(T(T(T(T(Ø)))))))
@JvmName("b12t11") operator fun B_12<Ø>.times(t: B_11<Ø>) = F(F(T(F(F(F(F(T(Ø))))))))
@JvmName("b12t12") operator fun B_12<Ø>.times(t: B_12<Ø>) = F(F(F(F(T(F(F(T(Ø))))))))
@JvmName("b12t13") operator fun B_12<Ø>.times(t: B_13<Ø>) = F(F(T(T(T(F(F(T(Ø))))))))
@JvmName("b12t14") operator fun B_12<Ø>.times(t: B_14<Ø>) = F(F(F(T(F(T(F(T(Ø))))))))
@JvmName("b12t15") operator fun B_12<Ø>.times(t: B_15<Ø>) = F(F(T(F(T(T(F(T(Ø))))))))
@JvmName("b13t3") operator fun B_13<Ø>.times(t: B_3<Ø>) = T(T(T(F(F(T(Ø))))))
@JvmName("b13t5") operator fun B_13<Ø>.times(t: B_5<Ø>) = T(F(F(F(F(F(T(Ø)))))))
@JvmName("b13t6") operator fun B_13<Ø>.times(t: B_6<Ø>) = F(T(T(T(F(F(T(Ø)))))))
@JvmName("b13t7") operator fun B_13<Ø>.times(t: B_7<Ø>) = T(T(F(T(T(F(T(Ø)))))))
@JvmName("b13t9") operator fun B_13<Ø>.times(t: B_9<Ø>) = T(F(T(F(T(T(T(Ø)))))))
@JvmName("b13t10") operator fun B_13<Ø>.times(t: B_10<Ø>) = F(T(F(F(F(F(F(T(Ø))))))))
@JvmName("b13t11") operator fun B_13<Ø>.times(t: B_11<Ø>) = T(T(T(T(F(F(F(T(Ø))))))))
@JvmName("b13t12") operator fun B_13<Ø>.times(t: B_12<Ø>) = F(F(T(T(T(F(F(T(Ø))))))))
@JvmName("b13t13") operator fun B_13<Ø>.times(t: B_13<Ø>) = T(F(F(T(F(T(F(T(Ø))))))))
@JvmName("b13t14") operator fun B_13<Ø>.times(t: B_14<Ø>) = F(T(T(F(T(T(F(T(Ø))))))))
@JvmName("b13t15") operator fun B_13<Ø>.times(t: B_15<Ø>) = T(T(F(F(F(F(T(T(Ø))))))))
@JvmName("b14t3") operator fun B_14<Ø>.times(t: B_3<Ø>) = F(T(F(T(F(T(Ø))))))
@JvmName("b14t5") operator fun B_14<Ø>.times(t: B_5<Ø>) = F(T(T(F(F(F(T(Ø)))))))
@JvmName("b14t6") operator fun B_14<Ø>.times(t: B_6<Ø>) = F(F(T(F(T(F(T(Ø)))))))
@JvmName("b14t7") operator fun B_14<Ø>.times(t: B_7<Ø>) = F(T(F(F(F(T(T(Ø)))))))
@JvmName("b14t9") operator fun B_14<Ø>.times(t: B_9<Ø>) = F(T(T(T(T(T(T(Ø)))))))
@JvmName("b14t10") operator fun B_14<Ø>.times(t: B_10<Ø>) = F(F(T(T(F(F(F(T(Ø))))))))
@JvmName("b14t11") operator fun B_14<Ø>.times(t: B_11<Ø>) = F(T(F(T(T(F(F(T(Ø))))))))
@JvmName("b14t12") operator fun B_14<Ø>.times(t: B_12<Ø>) = F(F(F(T(F(T(F(T(Ø))))))))
@JvmName("b14t13") operator fun B_14<Ø>.times(t: B_13<Ø>) = F(T(T(F(T(T(F(T(Ø))))))))
@JvmName("b14t14") operator fun B_14<Ø>.times(t: B_14<Ø>) = F(F(T(F(F(F(T(T(Ø))))))))
@JvmName("b14t15") operator fun B_14<Ø>.times(t: B_15<Ø>) = F(T(F(F(T(F(T(T(Ø))))))))
@JvmName("b15t3") operator fun B_15<Ø>.times(t: B_3<Ø>) = T(F(T(T(F(T(Ø))))))
@JvmName("b15t5") operator fun B_15<Ø>.times(t: B_5<Ø>) = T(T(F(T(F(F(T(Ø)))))))
@JvmName("b15t6") operator fun B_15<Ø>.times(t: B_6<Ø>) = F(T(F(T(T(F(T(Ø)))))))
@JvmName("b15t7") operator fun B_15<Ø>.times(t: B_7<Ø>) = T(F(F(T(F(T(T(Ø)))))))
@JvmName("b15t9") operator fun B_15<Ø>.times(t: B_9<Ø>) = T(T(T(F(F(F(F(T(Ø))))))))
@JvmName("b15t10") operator fun B_15<Ø>.times(t: B_10<Ø>) = F(T(T(F(T(F(F(T(Ø))))))))
@JvmName("b15t11") operator fun B_15<Ø>.times(t: B_11<Ø>) = T(F(T(F(F(T(F(T(Ø))))))))
@JvmName("b15t12") operator fun B_15<Ø>.times(t: B_12<Ø>) = F(F(T(F(T(T(F(T(Ø))))))))
@JvmName("b15t13") operator fun B_15<Ø>.times(t: B_13<Ø>) = T(T(F(F(F(F(T(T(Ø))))))))
@JvmName("b15t14") operator fun B_15<Ø>.times(t: B_14<Ø>) = F(T(F(F(T(F(T(T(Ø))))))))
@JvmName("b15t15") operator fun B_15<Ø>.times(t: B_15<Ø>) = T(F(F(F(F(T(T(T(Ø))))))))

@JvmName("b_d1") operator fun <K: B<*, *>> K.div(t: T<Ø>) = this
@JvmName("b_d_") operator fun <K> K.div(t: K) = T(Ø)
@JvmName("b_d2") operator fun <K: B<*, *>> F<K>.div(d: F<T<Ø>>) = x
@JvmName("b_d4") operator fun <K: B<*, *>> F<F<K>>.div(d: F<F<T<Ø>>>) = x.x
@JvmName("b_d8") operator fun <K: B<*, *>> F<F<F<K>>>.div(d: F<F<F<T<Ø>>>>) = x.x.x
@JvmName("b_d16") operator fun <K: B<*, *>> F<F<F<F<K>>>>.div(d: F<F<F<F<T<Ø>>>>>) = x.x.x.x
@JvmName("b_d32") operator fun <K: B<*, *>> F<F<F<F<F<K>>>>>.div(d: F<F<F<F<F<T<Ø>>>>>>) = x.x.x.x.x
@JvmName("b_d64") operator fun <K: B<*, *>> F<F<F<F<F<F<K>>>>>>.div(d: F<F<F<F<F<F<T<Ø>>>>>>>) = x.x.x.x.x.x
@JvmName("b_d128") operator fun <K: B<*, *>> F<F<F<F<F<F<F<K>>>>>>>.div(d: F<F<F<F<F<F<F<T<Ø>>>>>>>>) = x.x.x.x.x.x.x

@JvmName("b6d3") operator fun F<T<T<Ø>>>.div(d: T<T<Ø>>) = F(T(Ø))
@JvmName("b9d3") operator fun T<F<F<T<Ø>>>>.div(d: T<T<Ø>>) = T(T(Ø))
@JvmName("b10d5") operator fun F<T<F<T<Ø>>>>.div(d: T<F<T<Ø>>>) = F(T(Ø))
@JvmName("b12d3") operator fun F<F<T<T<Ø>>>>.div(d: T<T<Ø>>) = F(F(T(Ø)))
@JvmName("b12d6") operator fun F<F<T<T<Ø>>>>.div(d: F<T<T<Ø>>>) = F(T(Ø))
@JvmName("b14d7") operator fun F<T<T<T<Ø>>>>.div(d: T<T<T<Ø>>>) = F(T(Ø))
@JvmName("b15d3") operator fun T<T<T<T<Ø>>>>.div(d: T<T<Ø>>) = T(F(T(Ø)))
@JvmName("b15d5") operator fun T<T<T<T<Ø>>>>.div(d: T<F<T<Ø>>>) = T(T(Ø))
@JvmName("b18d3") operator fun F<T<F<F<T<Ø>>>>>.div(d: T<T<Ø>>) = F(T(T(Ø)))
@JvmName("b18d6") operator fun F<T<F<F<T<Ø>>>>>.div(d: F<T<T<Ø>>>) = T(T(Ø))
@JvmName("b18d9") operator fun F<T<F<F<T<Ø>>>>>.div(d: T<F<F<T<Ø>>>>) = F(T(Ø))
@JvmName("b20d5") operator fun F<F<T<F<T<Ø>>>>>.div(d: T<F<T<Ø>>>) = F(F(T(Ø)))
@JvmName("b20d10") operator fun F<F<T<F<T<Ø>>>>>.div(d: F<T<F<T<Ø>>>>) = F(T(Ø))
@JvmName("b21d3") operator fun T<F<T<F<T<Ø>>>>>.div(d: T<T<Ø>>) = T(T(T(Ø)))
@JvmName("b21d7") operator fun T<F<T<F<T<Ø>>>>>.div(d: T<T<T<Ø>>>) = T(T(Ø))
@JvmName("b22d11") operator fun F<T<T<F<T<Ø>>>>>.div(d: T<T<F<T<Ø>>>>) = F(T(Ø))
@JvmName("b24d3") operator fun F<F<F<T<T<Ø>>>>>.div(d: T<T<Ø>>) = F(F(F(T(Ø))))
@JvmName("b24d6") operator fun F<F<F<T<T<Ø>>>>>.div(d: F<T<T<Ø>>>) = F(F(T(Ø)))
@JvmName("b24d12") operator fun F<F<F<T<T<Ø>>>>>.div(d: F<F<T<T<Ø>>>>) = F(T(Ø))
@JvmName("b25d5") operator fun T<F<F<T<T<Ø>>>>>.div(d: T<F<T<Ø>>>) = T(F(T(Ø)))
@JvmName("b26d13") operator fun F<T<F<T<T<Ø>>>>>.div(d: T<F<T<T<Ø>>>>) = F(T(Ø))
@JvmName("b27d3") operator fun T<T<F<T<T<Ø>>>>>.div(d: T<T<Ø>>) = T(F(F(T(Ø))))
@JvmName("b27d9") operator fun T<T<F<T<T<Ø>>>>>.div(d: T<F<F<T<Ø>>>>) = T(T(Ø))
@JvmName("b28d7") operator fun F<F<T<T<T<Ø>>>>>.div(d: T<T<T<Ø>>>) = F(F(T(Ø)))
@JvmName("b28d14") operator fun F<F<T<T<T<Ø>>>>>.div(d: F<T<T<T<Ø>>>>) = F(T(Ø))
@JvmName("b30d3") operator fun F<T<T<T<T<Ø>>>>>.div(d: T<T<Ø>>) = F(T(F(T(Ø))))
@JvmName("b30d5") operator fun F<T<T<T<T<Ø>>>>>.div(d: T<F<T<Ø>>>) = F(T(T(Ø)))
@JvmName("b30d6") operator fun F<T<T<T<T<Ø>>>>>.div(d: F<T<T<Ø>>>) = T(F(T(Ø)))
@JvmName("b30d10") operator fun F<T<T<T<T<Ø>>>>>.div(d: F<T<F<T<Ø>>>>) = T(T(Ø))
@JvmName("b30d15") operator fun F<T<T<T<T<Ø>>>>>.div(d: T<T<T<T<Ø>>>>) = F(T(Ø))
@JvmName("b33d3") operator fun T<F<F<F<F<T<Ø>>>>>>.div(d: T<T<Ø>>) = T(T(F(T(Ø))))
@JvmName("b33d11") operator fun T<F<F<F<F<T<Ø>>>>>>.div(d: T<T<F<T<Ø>>>>) = T(T(Ø))
@JvmName("b34d17") operator fun F<T<F<F<F<T<Ø>>>>>>.div(d: T<F<F<F<T<Ø>>>>>) = F(T(Ø))
@JvmName("b35d5") operator fun T<T<F<F<F<T<Ø>>>>>>.div(d: T<F<T<Ø>>>) = T(T(T(Ø)))
@JvmName("b35d7") operator fun T<T<F<F<F<T<Ø>>>>>>.div(d: T<T<T<Ø>>>) = T(F(T(Ø)))
@JvmName("b36d3") operator fun F<F<T<F<F<T<Ø>>>>>>.div(d: T<T<Ø>>) = F(F(T(T(Ø))))
@JvmName("b36d6") operator fun F<F<T<F<F<T<Ø>>>>>>.div(d: F<T<T<Ø>>>) = F(T(T(Ø)))
@JvmName("b36d9") operator fun F<F<T<F<F<T<Ø>>>>>>.div(d: T<F<F<T<Ø>>>>) = F(F(T(Ø)))
@JvmName("b36d12") operator fun F<F<T<F<F<T<Ø>>>>>>.div(d: F<F<T<T<Ø>>>>) = T(T(Ø))
@JvmName("b36d18") operator fun F<F<T<F<F<T<Ø>>>>>>.div(d: F<T<F<F<T<Ø>>>>>) = F(T(Ø))
@JvmName("b38d19") operator fun F<T<T<F<F<T<Ø>>>>>>.div(d: T<T<F<F<T<Ø>>>>>) = F(T(Ø))
@JvmName("b39d3") operator fun T<T<T<F<F<T<Ø>>>>>>.div(d: T<T<Ø>>) = T(F(T(T(Ø))))
@JvmName("b39d13") operator fun T<T<T<F<F<T<Ø>>>>>>.div(d: T<F<T<T<Ø>>>>) = T(T(Ø))
@JvmName("b40d5") operator fun F<F<F<T<F<T<Ø>>>>>>.div(d: T<F<T<Ø>>>) = F(F(F(T(Ø))))
@JvmName("b40d10") operator fun F<F<F<T<F<T<Ø>>>>>>.div(d: F<T<F<T<Ø>>>>) = F(F(T(Ø)))
@JvmName("b40d20") operator fun F<F<F<T<F<T<Ø>>>>>>.div(d: F<F<T<F<T<Ø>>>>>) = F(T(Ø))
@JvmName("b42d3") operator fun F<T<F<T<F<T<Ø>>>>>>.div(d: T<T<Ø>>) = F(T(T(T(Ø))))
@JvmName("b42d6") operator fun F<T<F<T<F<T<Ø>>>>>>.div(d: F<T<T<Ø>>>) = T(T(T(Ø)))
@JvmName("b42d7") operator fun F<T<F<T<F<T<Ø>>>>>>.div(d: T<T<T<Ø>>>) = F(T(T(Ø)))
@JvmName("b42d14") operator fun F<T<F<T<F<T<Ø>>>>>>.div(d: F<T<T<T<Ø>>>>) = T(T(Ø))
@JvmName("b42d21") operator fun F<T<F<T<F<T<Ø>>>>>>.div(d: T<F<T<F<T<Ø>>>>>) = F(T(Ø))
@JvmName("b44d11") operator fun F<F<T<T<F<T<Ø>>>>>>.div(d: T<T<F<T<Ø>>>>) = F(F(T(Ø)))
@JvmName("b44d22") operator fun F<F<T<T<F<T<Ø>>>>>>.div(d: F<T<T<F<T<Ø>>>>>) = F(T(Ø))
@JvmName("b45d3") operator fun T<F<T<T<F<T<Ø>>>>>>.div(d: T<T<Ø>>) = T(T(T(T(Ø))))
@JvmName("b45d5") operator fun T<F<T<T<F<T<Ø>>>>>>.div(d: T<F<T<Ø>>>) = T(F(F(T(Ø))))
@JvmName("b45d9") operator fun T<F<T<T<F<T<Ø>>>>>>.div(d: T<F<F<T<Ø>>>>) = T(F(T(Ø)))
@JvmName("b45d15") operator fun T<F<T<T<F<T<Ø>>>>>>.div(d: T<T<T<T<Ø>>>>) = T(T(Ø))
@JvmName("b46d23") operator fun F<T<T<T<F<T<Ø>>>>>>.div(d: T<T<T<F<T<Ø>>>>>) = F(T(Ø))
@JvmName("b48d3") operator fun F<F<F<F<T<T<Ø>>>>>>.div(d: T<T<Ø>>) = F(F(F(F(T(Ø)))))
@JvmName("b48d6") operator fun F<F<F<F<T<T<Ø>>>>>>.div(d: F<T<T<Ø>>>) = F(F(F(T(Ø))))
@JvmName("b48d12") operator fun F<F<F<F<T<T<Ø>>>>>>.div(d: F<F<T<T<Ø>>>>) = F(F(T(Ø)))
@JvmName("b48d24") operator fun F<F<F<F<T<T<Ø>>>>>>.div(d: F<F<F<T<T<Ø>>>>>) = F(T(Ø))
@JvmName("b49d7") operator fun T<F<F<F<T<T<Ø>>>>>>.div(d: T<T<T<Ø>>>) = T(T(T(Ø)))
@JvmName("b50d5") operator fun F<T<F<F<T<T<Ø>>>>>>.div(d: T<F<T<Ø>>>) = F(T(F(T(Ø))))
@JvmName("b50d10") operator fun F<T<F<F<T<T<Ø>>>>>>.div(d: F<T<F<T<Ø>>>>) = T(F(T(Ø)))
@JvmName("b50d25") operator fun F<T<F<F<T<T<Ø>>>>>>.div(d: T<F<F<T<T<Ø>>>>>) = F(T(Ø))
@JvmName("b51d3") operator fun T<T<F<F<T<T<Ø>>>>>>.div(d: T<T<Ø>>) = T(F(F(F(T(Ø)))))
@JvmName("b51d17") operator fun T<T<F<F<T<T<Ø>>>>>>.div(d: T<F<F<F<T<Ø>>>>>) = T(T(Ø))
@JvmName("b52d13") operator fun F<F<T<F<T<T<Ø>>>>>>.div(d: T<F<T<T<Ø>>>>) = F(F(T(Ø)))
@JvmName("b52d26") operator fun F<F<T<F<T<T<Ø>>>>>>.div(d: F<T<F<T<T<Ø>>>>>) = F(T(Ø))
@JvmName("b54d3") operator fun F<T<T<F<T<T<Ø>>>>>>.div(d: T<T<Ø>>) = F(T(F(F(T(Ø)))))
@JvmName("b54d6") operator fun F<T<T<F<T<T<Ø>>>>>>.div(d: F<T<T<Ø>>>) = T(F(F(T(Ø))))
@JvmName("b54d9") operator fun F<T<T<F<T<T<Ø>>>>>>.div(d: T<F<F<T<Ø>>>>) = F(T(T(Ø)))
@JvmName("b54d18") operator fun F<T<T<F<T<T<Ø>>>>>>.div(d: F<T<F<F<T<Ø>>>>>) = T(T(Ø))
@JvmName("b54d27") operator fun F<T<T<F<T<T<Ø>>>>>>.div(d: T<T<F<T<T<Ø>>>>>) = F(T(Ø))
@JvmName("b55d5") operator fun T<T<T<F<T<T<Ø>>>>>>.div(d: T<F<T<Ø>>>) = T(T(F(T(Ø))))
@JvmName("b55d11") operator fun T<T<T<F<T<T<Ø>>>>>>.div(d: T<T<F<T<Ø>>>>) = T(F(T(Ø)))
@JvmName("b56d7") operator fun F<F<F<T<T<T<Ø>>>>>>.div(d: T<T<T<Ø>>>) = F(F(F(T(Ø))))
@JvmName("b56d14") operator fun F<F<F<T<T<T<Ø>>>>>>.div(d: F<T<T<T<Ø>>>>) = F(F(T(Ø)))
@JvmName("b56d28") operator fun F<F<F<T<T<T<Ø>>>>>>.div(d: F<F<T<T<T<Ø>>>>>) = F(T(Ø))
@JvmName("b57d3") operator fun T<F<F<T<T<T<Ø>>>>>>.div(d: T<T<Ø>>) = T(T(F(F(T(Ø)))))
@JvmName("b57d19") operator fun T<F<F<T<T<T<Ø>>>>>>.div(d: T<T<F<F<T<Ø>>>>>) = T(T(Ø))
@JvmName("b58d29") operator fun F<T<F<T<T<T<Ø>>>>>>.div(d: T<F<T<T<T<Ø>>>>>) = F(T(Ø))
@JvmName("b60d3") operator fun F<F<T<T<T<T<Ø>>>>>>.div(d: T<T<Ø>>) = F(F(T(F(T(Ø)))))
@JvmName("b60d5") operator fun F<F<T<T<T<T<Ø>>>>>>.div(d: T<F<T<Ø>>>) = F(F(T(T(Ø))))
@JvmName("b60d6") operator fun F<F<T<T<T<T<Ø>>>>>>.div(d: F<T<T<Ø>>>) = F(T(F(T(Ø))))
@JvmName("b60d10") operator fun F<F<T<T<T<T<Ø>>>>>>.div(d: F<T<F<T<Ø>>>>) = F(T(T(Ø)))
@JvmName("b60d12") operator fun F<F<T<T<T<T<Ø>>>>>>.div(d: F<F<T<T<Ø>>>>) = T(F(T(Ø)))
@JvmName("b60d15") operator fun F<F<T<T<T<T<Ø>>>>>>.div(d: T<T<T<T<Ø>>>>) = F(F(T(Ø)))
@JvmName("b60d20") operator fun F<F<T<T<T<T<Ø>>>>>>.div(d: F<F<T<F<T<Ø>>>>>) = T(T(Ø))
@JvmName("b60d30") operator fun F<F<T<T<T<T<Ø>>>>>>.div(d: F<T<T<T<T<Ø>>>>>) = F(T(Ø))
@JvmName("b62d31") operator fun F<T<T<T<T<T<Ø>>>>>>.div(d: T<T<T<T<T<Ø>>>>>) = F(T(Ø))
@JvmName("b63d3") operator fun T<T<T<T<T<T<Ø>>>>>>.div(d: T<T<Ø>>) = T(F(T(F(T(Ø)))))
@JvmName("b63d7") operator fun T<T<T<T<T<T<Ø>>>>>>.div(d: T<T<T<Ø>>>) = T(F(F(T(Ø))))
@JvmName("b63d9") operator fun T<T<T<T<T<T<Ø>>>>>>.div(d: T<F<F<T<Ø>>>>) = T(T(T(Ø)))
@JvmName("b63d21") operator fun T<T<T<T<T<T<Ø>>>>>>.div(d: T<F<T<F<T<Ø>>>>>) = T(T(Ø))
@JvmName("b65d5") operator fun T<F<F<F<F<F<T<Ø>>>>>>>.div(d: T<F<T<Ø>>>) = T(F(T(T(Ø))))
@JvmName("b65d13") operator fun T<F<F<F<F<F<T<Ø>>>>>>>.div(d: T<F<T<T<Ø>>>>) = T(F(T(Ø)))
@JvmName("b66d3") operator fun F<T<F<F<F<F<T<Ø>>>>>>>.div(d: T<T<Ø>>) = F(T(T(F(T(Ø)))))
@JvmName("b66d6") operator fun F<T<F<F<F<F<T<Ø>>>>>>>.div(d: F<T<T<Ø>>>) = T(T(F(T(Ø))))
@JvmName("b66d11") operator fun F<T<F<F<F<F<T<Ø>>>>>>>.div(d: T<T<F<T<Ø>>>>) = F(T(T(Ø)))
@JvmName("b66d22") operator fun F<T<F<F<F<F<T<Ø>>>>>>>.div(d: F<T<T<F<T<Ø>>>>>) = T(T(Ø))
@JvmName("b66d33") operator fun F<T<F<F<F<F<T<Ø>>>>>>>.div(d: T<F<F<F<F<T<Ø>>>>>>) = F(T(Ø))
@JvmName("b68d17") operator fun F<F<T<F<F<F<T<Ø>>>>>>>.div(d: T<F<F<F<T<Ø>>>>>) = F(F(T(Ø)))
@JvmName("b68d34") operator fun F<F<T<F<F<F<T<Ø>>>>>>>.div(d: F<T<F<F<F<T<Ø>>>>>>) = F(T(Ø))
@JvmName("b69d3") operator fun T<F<T<F<F<F<T<Ø>>>>>>>.div(d: T<T<Ø>>) = T(T(T(F(T(Ø)))))
@JvmName("b69d23") operator fun T<F<T<F<F<F<T<Ø>>>>>>>.div(d: T<T<T<F<T<Ø>>>>>) = T(T(Ø))
@JvmName("b70d5") operator fun F<T<T<F<F<F<T<Ø>>>>>>>.div(d: T<F<T<Ø>>>) = F(T(T(T(Ø))))
@JvmName("b70d7") operator fun F<T<T<F<F<F<T<Ø>>>>>>>.div(d: T<T<T<Ø>>>) = F(T(F(T(Ø))))
@JvmName("b70d10") operator fun F<T<T<F<F<F<T<Ø>>>>>>>.div(d: F<T<F<T<Ø>>>>) = T(T(T(Ø)))
@JvmName("b70d14") operator fun F<T<T<F<F<F<T<Ø>>>>>>>.div(d: F<T<T<T<Ø>>>>) = T(F(T(Ø)))
@JvmName("b70d35") operator fun F<T<T<F<F<F<T<Ø>>>>>>>.div(d: T<T<F<F<F<T<Ø>>>>>>) = F(T(Ø))
@JvmName("b72d3") operator fun F<F<F<T<F<F<T<Ø>>>>>>>.div(d: T<T<Ø>>) = F(F(F(T(T(Ø)))))
@JvmName("b72d6") operator fun F<F<F<T<F<F<T<Ø>>>>>>>.div(d: F<T<T<Ø>>>) = F(F(T(T(Ø))))
@JvmName("b72d9") operator fun F<F<F<T<F<F<T<Ø>>>>>>>.div(d: T<F<F<T<Ø>>>>) = F(F(F(T(Ø))))
@JvmName("b72d12") operator fun F<F<F<T<F<F<T<Ø>>>>>>>.div(d: F<F<T<T<Ø>>>>) = F(T(T(Ø)))
@JvmName("b72d18") operator fun F<F<F<T<F<F<T<Ø>>>>>>>.div(d: F<T<F<F<T<Ø>>>>>) = F(F(T(Ø)))
@JvmName("b72d24") operator fun F<F<F<T<F<F<T<Ø>>>>>>>.div(d: F<F<F<T<T<Ø>>>>>) = T(T(Ø))
@JvmName("b72d36") operator fun F<F<F<T<F<F<T<Ø>>>>>>>.div(d: F<F<T<F<F<T<Ø>>>>>>) = F(T(Ø))
@JvmName("b74d37") operator fun F<T<F<T<F<F<T<Ø>>>>>>>.div(d: T<F<T<F<F<T<Ø>>>>>>) = F(T(Ø))
@JvmName("b75d3") operator fun T<T<F<T<F<F<T<Ø>>>>>>>.div(d: T<T<Ø>>) = T(F(F(T(T(Ø)))))
@JvmName("b75d5") operator fun T<T<F<T<F<F<T<Ø>>>>>>>.div(d: T<F<T<Ø>>>) = T(T(T(T(Ø))))
@JvmName("b75d15") operator fun T<T<F<T<F<F<T<Ø>>>>>>>.div(d: T<T<T<T<Ø>>>>) = T(F(T(Ø)))
@JvmName("b75d25") operator fun T<T<F<T<F<F<T<Ø>>>>>>>.div(d: T<F<F<T<T<Ø>>>>>) = T(T(Ø))
@JvmName("b76d19") operator fun F<F<T<T<F<F<T<Ø>>>>>>>.div(d: T<T<F<F<T<Ø>>>>>) = F(F(T(Ø)))
@JvmName("b76d38") operator fun F<F<T<T<F<F<T<Ø>>>>>>>.div(d: F<T<T<F<F<T<Ø>>>>>>) = F(T(Ø))
@JvmName("b77d7") operator fun T<F<T<T<F<F<T<Ø>>>>>>>.div(d: T<T<T<Ø>>>) = T(T(F(T(Ø))))
@JvmName("b77d11") operator fun T<F<T<T<F<F<T<Ø>>>>>>>.div(d: T<T<F<T<Ø>>>>) = T(T(T(Ø)))
@JvmName("b78d3") operator fun F<T<T<T<F<F<T<Ø>>>>>>>.div(d: T<T<Ø>>) = F(T(F(T(T(Ø)))))
@JvmName("b78d6") operator fun F<T<T<T<F<F<T<Ø>>>>>>>.div(d: F<T<T<Ø>>>) = T(F(T(T(Ø))))
@JvmName("b78d13") operator fun F<T<T<T<F<F<T<Ø>>>>>>>.div(d: T<F<T<T<Ø>>>>) = F(T(T(Ø)))
@JvmName("b78d26") operator fun F<T<T<T<F<F<T<Ø>>>>>>>.div(d: F<T<F<T<T<Ø>>>>>) = T(T(Ø))
@JvmName("b78d39") operator fun F<T<T<T<F<F<T<Ø>>>>>>>.div(d: T<T<T<F<F<T<Ø>>>>>>) = F(T(Ø))
@JvmName("b80d5") operator fun F<F<F<F<T<F<T<Ø>>>>>>>.div(d: T<F<T<Ø>>>) = F(F(F(F(T(Ø)))))
@JvmName("b80d10") operator fun F<F<F<F<T<F<T<Ø>>>>>>>.div(d: F<T<F<T<Ø>>>>) = F(F(F(T(Ø))))
@JvmName("b80d20") operator fun F<F<F<F<T<F<T<Ø>>>>>>>.div(d: F<F<T<F<T<Ø>>>>>) = F(F(T(Ø)))
@JvmName("b80d40") operator fun F<F<F<F<T<F<T<Ø>>>>>>>.div(d: F<F<F<T<F<T<Ø>>>>>>) = F(T(Ø))
@JvmName("b81d3") operator fun T<F<F<F<T<F<T<Ø>>>>>>>.div(d: T<T<Ø>>) = T(T(F(T(T(Ø)))))
@JvmName("b81d9") operator fun T<F<F<F<T<F<T<Ø>>>>>>>.div(d: T<F<F<T<Ø>>>>) = T(F(F(T(Ø))))
@JvmName("b81d27") operator fun T<F<F<F<T<F<T<Ø>>>>>>>.div(d: T<T<F<T<T<Ø>>>>>) = T(T(Ø))
@JvmName("b82d41") operator fun F<T<F<F<T<F<T<Ø>>>>>>>.div(d: T<F<F<T<F<T<Ø>>>>>>) = F(T(Ø))
@JvmName("b84d3") operator fun F<F<T<F<T<F<T<Ø>>>>>>>.div(d: T<T<Ø>>) = F(F(T(T(T(Ø)))))
@JvmName("b84d6") operator fun F<F<T<F<T<F<T<Ø>>>>>>>.div(d: F<T<T<Ø>>>) = F(T(T(T(Ø))))
@JvmName("b84d7") operator fun F<F<T<F<T<F<T<Ø>>>>>>>.div(d: T<T<T<Ø>>>) = F(F(T(T(Ø))))
@JvmName("b84d12") operator fun F<F<T<F<T<F<T<Ø>>>>>>>.div(d: F<F<T<T<Ø>>>>) = T(T(T(Ø)))
@JvmName("b84d14") operator fun F<F<T<F<T<F<T<Ø>>>>>>>.div(d: F<T<T<T<Ø>>>>) = F(T(T(Ø)))
@JvmName("b84d21") operator fun F<F<T<F<T<F<T<Ø>>>>>>>.div(d: T<F<T<F<T<Ø>>>>>) = F(F(T(Ø)))
@JvmName("b84d28") operator fun F<F<T<F<T<F<T<Ø>>>>>>>.div(d: F<F<T<T<T<Ø>>>>>) = T(T(Ø))
@JvmName("b84d42") operator fun F<F<T<F<T<F<T<Ø>>>>>>>.div(d: F<T<F<T<F<T<Ø>>>>>>) = F(T(Ø))
@JvmName("b85d5") operator fun T<F<T<F<T<F<T<Ø>>>>>>>.div(d: T<F<T<Ø>>>) = T(F(F(F(T(Ø)))))
@JvmName("b85d17") operator fun T<F<T<F<T<F<T<Ø>>>>>>>.div(d: T<F<F<F<T<Ø>>>>>) = T(F(T(Ø)))
@JvmName("b86d43") operator fun F<T<T<F<T<F<T<Ø>>>>>>>.div(d: T<T<F<T<F<T<Ø>>>>>>) = F(T(Ø))
@JvmName("b87d3") operator fun T<T<T<F<T<F<T<Ø>>>>>>>.div(d: T<T<Ø>>) = T(F(T(T(T(Ø)))))
@JvmName("b87d29") operator fun T<T<T<F<T<F<T<Ø>>>>>>>.div(d: T<F<T<T<T<Ø>>>>>) = T(T(Ø))
@JvmName("b88d11") operator fun F<F<F<T<T<F<T<Ø>>>>>>>.div(d: T<T<F<T<Ø>>>>) = F(F(F(T(Ø))))
@JvmName("b88d22") operator fun F<F<F<T<T<F<T<Ø>>>>>>>.div(d: F<T<T<F<T<Ø>>>>>) = F(F(T(Ø)))
@JvmName("b88d44") operator fun F<F<F<T<T<F<T<Ø>>>>>>>.div(d: F<F<T<T<F<T<Ø>>>>>>) = F(T(Ø))
@JvmName("b90d3") operator fun F<T<F<T<T<F<T<Ø>>>>>>>.div(d: T<T<Ø>>) = F(T(T(T(T(Ø)))))
@JvmName("b90d5") operator fun F<T<F<T<T<F<T<Ø>>>>>>>.div(d: T<F<T<Ø>>>) = F(T(F(F(T(Ø)))))
@JvmName("b90d6") operator fun F<T<F<T<T<F<T<Ø>>>>>>>.div(d: F<T<T<Ø>>>) = T(T(T(T(Ø))))
@JvmName("b90d9") operator fun F<T<F<T<T<F<T<Ø>>>>>>>.div(d: T<F<F<T<Ø>>>>) = F(T(F(T(Ø))))
@JvmName("b90d10") operator fun F<T<F<T<T<F<T<Ø>>>>>>>.div(d: F<T<F<T<Ø>>>>) = T(F(F(T(Ø))))
@JvmName("b90d15") operator fun F<T<F<T<T<F<T<Ø>>>>>>>.div(d: T<T<T<T<Ø>>>>) = F(T(T(Ø)))
@JvmName("b90d18") operator fun F<T<F<T<T<F<T<Ø>>>>>>>.div(d: F<T<F<F<T<Ø>>>>>) = T(F(T(Ø)))
@JvmName("b90d30") operator fun F<T<F<T<T<F<T<Ø>>>>>>>.div(d: F<T<T<T<T<Ø>>>>>) = T(T(Ø))
@JvmName("b90d45") operator fun F<T<F<T<T<F<T<Ø>>>>>>>.div(d: T<F<T<T<F<T<Ø>>>>>>) = F(T(Ø))
@JvmName("b91d7") operator fun T<T<F<T<T<F<T<Ø>>>>>>>.div(d: T<T<T<Ø>>>) = T(F(T(T(Ø))))
@JvmName("b91d13") operator fun T<T<F<T<T<F<T<Ø>>>>>>>.div(d: T<F<T<T<Ø>>>>) = T(T(T(Ø)))
@JvmName("b92d23") operator fun F<F<T<T<T<F<T<Ø>>>>>>>.div(d: T<T<T<F<T<Ø>>>>>) = F(F(T(Ø)))
@JvmName("b92d46") operator fun F<F<T<T<T<F<T<Ø>>>>>>>.div(d: F<T<T<T<F<T<Ø>>>>>>) = F(T(Ø))
@JvmName("b93d3") operator fun T<F<T<T<T<F<T<Ø>>>>>>>.div(d: T<T<Ø>>) = T(T(T(T(T(Ø)))))
@JvmName("b93d31") operator fun T<F<T<T<T<F<T<Ø>>>>>>>.div(d: T<T<T<T<T<Ø>>>>>) = T(T(Ø))
@JvmName("b94d47") operator fun F<T<T<T<T<F<T<Ø>>>>>>>.div(d: T<T<T<T<F<T<Ø>>>>>>) = F(T(Ø))
@JvmName("b95d5") operator fun T<T<T<T<T<F<T<Ø>>>>>>>.div(d: T<F<T<Ø>>>) = T(T(F(F(T(Ø)))))
@JvmName("b95d19") operator fun T<T<T<T<T<F<T<Ø>>>>>>>.div(d: T<T<F<F<T<Ø>>>>>) = T(F(T(Ø)))
@JvmName("b96d3") operator fun F<F<F<F<F<T<T<Ø>>>>>>>.div(d: T<T<Ø>>) = F(F(F(F(F(T(Ø))))))
@JvmName("b96d6") operator fun F<F<F<F<F<T<T<Ø>>>>>>>.div(d: F<T<T<Ø>>>) = F(F(F(F(T(Ø)))))
@JvmName("b96d12") operator fun F<F<F<F<F<T<T<Ø>>>>>>>.div(d: F<F<T<T<Ø>>>>) = F(F(F(T(Ø))))
@JvmName("b96d24") operator fun F<F<F<F<F<T<T<Ø>>>>>>>.div(d: F<F<F<T<T<Ø>>>>>) = F(F(T(Ø)))
@JvmName("b96d48") operator fun F<F<F<F<F<T<T<Ø>>>>>>>.div(d: F<F<F<F<T<T<Ø>>>>>>) = F(T(Ø))
@JvmName("b98d7") operator fun F<T<F<F<F<T<T<Ø>>>>>>>.div(d: T<T<T<Ø>>>) = F(T(T(T(Ø))))
@JvmName("b98d14") operator fun F<T<F<F<F<T<T<Ø>>>>>>>.div(d: F<T<T<T<Ø>>>>) = T(T(T(Ø)))
@JvmName("b98d49") operator fun F<T<F<F<F<T<T<Ø>>>>>>>.div(d: T<F<F<F<T<T<Ø>>>>>>) = F(T(Ø))
@JvmName("b99d3") operator fun T<T<F<F<F<T<T<Ø>>>>>>>.div(d: T<T<Ø>>) = T(F(F(F(F(T(Ø))))))
@JvmName("b99d9") operator fun T<T<F<F<F<T<T<Ø>>>>>>>.div(d: T<F<F<T<Ø>>>>) = T(T(F(T(Ø))))
@JvmName("b99d11") operator fun T<T<F<F<F<T<T<Ø>>>>>>>.div(d: T<T<F<T<Ø>>>>) = T(F(F(T(Ø))))
@JvmName("b99d33") operator fun T<T<F<F<F<T<T<Ø>>>>>>>.div(d: T<F<F<F<F<T<Ø>>>>>>) = T(T(Ø))
@JvmName("b100d5") operator fun F<F<T<F<F<T<T<Ø>>>>>>>.div(d: T<F<T<Ø>>>) = F(F(T(F(T(Ø)))))
@JvmName("b100d10") operator fun F<F<T<F<F<T<T<Ø>>>>>>>.div(d: F<T<F<T<Ø>>>>) = F(T(F(T(Ø))))
@JvmName("b100d20") operator fun F<F<T<F<F<T<T<Ø>>>>>>>.div(d: F<F<T<F<T<Ø>>>>>) = T(F(T(Ø)))
@JvmName("b100d25") operator fun F<F<T<F<F<T<T<Ø>>>>>>>.div(d: T<F<F<T<T<Ø>>>>>) = F(F(T(Ø)))
@JvmName("b100d50") operator fun F<F<T<F<F<T<T<Ø>>>>>>>.div(d: F<T<F<F<T<T<Ø>>>>>>) = F(T(Ø))
@JvmName("b102d3") operator fun F<T<T<F<F<T<T<Ø>>>>>>>.div(d: T<T<Ø>>) = F(T(F(F(F(T(Ø))))))
@JvmName("b102d6") operator fun F<T<T<F<F<T<T<Ø>>>>>>>.div(d: F<T<T<Ø>>>) = T(F(F(F(T(Ø)))))
@JvmName("b102d17") operator fun F<T<T<F<F<T<T<Ø>>>>>>>.div(d: T<F<F<F<T<Ø>>>>>) = F(T(T(Ø)))
@JvmName("b102d34") operator fun F<T<T<F<F<T<T<Ø>>>>>>>.div(d: F<T<F<F<F<T<Ø>>>>>>) = T(T(Ø))
@JvmName("b102d51") operator fun F<T<T<F<F<T<T<Ø>>>>>>>.div(d: T<T<F<F<T<T<Ø>>>>>>) = F(T(Ø))
@JvmName("b104d13") operator fun F<F<F<T<F<T<T<Ø>>>>>>>.div(d: T<F<T<T<Ø>>>>) = F(F(F(T(Ø))))
@JvmName("b104d26") operator fun F<F<F<T<F<T<T<Ø>>>>>>>.div(d: F<T<F<T<T<Ø>>>>>) = F(F(T(Ø)))
@JvmName("b104d52") operator fun F<F<F<T<F<T<T<Ø>>>>>>>.div(d: F<F<T<F<T<T<Ø>>>>>>) = F(T(Ø))
@JvmName("b105d3") operator fun T<F<F<T<F<T<T<Ø>>>>>>>.div(d: T<T<Ø>>) = T(T(F(F(F(T(Ø))))))
@JvmName("b105d5") operator fun T<F<F<T<F<T<T<Ø>>>>>>>.div(d: T<F<T<Ø>>>) = T(F(T(F(T(Ø)))))
@JvmName("b105d7") operator fun T<F<F<T<F<T<T<Ø>>>>>>>.div(d: T<T<T<Ø>>>) = T(T(T(T(Ø))))
@JvmName("b105d15") operator fun T<F<F<T<F<T<T<Ø>>>>>>>.div(d: T<T<T<T<Ø>>>>) = T(T(T(Ø)))
@JvmName("b105d21") operator fun T<F<F<T<F<T<T<Ø>>>>>>>.div(d: T<F<T<F<T<Ø>>>>>) = T(F(T(Ø)))
@JvmName("b105d35") operator fun T<F<F<T<F<T<T<Ø>>>>>>>.div(d: T<T<F<F<F<T<Ø>>>>>>) = T(T(Ø))
@JvmName("b106d53") operator fun F<T<F<T<F<T<T<Ø>>>>>>>.div(d: T<F<T<F<T<T<Ø>>>>>>) = F(T(Ø))
@JvmName("b108d3") operator fun F<F<T<T<F<T<T<Ø>>>>>>>.div(d: T<T<Ø>>) = F(F(T(F(F(T(Ø))))))
@JvmName("b108d6") operator fun F<F<T<T<F<T<T<Ø>>>>>>>.div(d: F<T<T<Ø>>>) = F(T(F(F(T(Ø)))))
@JvmName("b108d9") operator fun F<F<T<T<F<T<T<Ø>>>>>>>.div(d: T<F<F<T<Ø>>>>) = F(F(T(T(Ø))))
@JvmName("b108d12") operator fun F<F<T<T<F<T<T<Ø>>>>>>>.div(d: F<F<T<T<Ø>>>>) = T(F(F(T(Ø))))
@JvmName("b108d18") operator fun F<F<T<T<F<T<T<Ø>>>>>>>.div(d: F<T<F<F<T<Ø>>>>>) = F(T(T(Ø)))
@JvmName("b108d27") operator fun F<F<T<T<F<T<T<Ø>>>>>>>.div(d: T<T<F<T<T<Ø>>>>>) = F(F(T(Ø)))
@JvmName("b108d36") operator fun F<F<T<T<F<T<T<Ø>>>>>>>.div(d: F<F<T<F<F<T<Ø>>>>>>) = T(T(Ø))
@JvmName("b108d54") operator fun F<F<T<T<F<T<T<Ø>>>>>>>.div(d: F<T<T<F<T<T<Ø>>>>>>) = F(T(Ø))
@JvmName("b110d5") operator fun F<T<T<T<F<T<T<Ø>>>>>>>.div(d: T<F<T<Ø>>>) = F(T(T(F(T(Ø)))))
@JvmName("b110d10") operator fun F<T<T<T<F<T<T<Ø>>>>>>>.div(d: F<T<F<T<Ø>>>>) = T(T(F(T(Ø))))
@JvmName("b110d11") operator fun F<T<T<T<F<T<T<Ø>>>>>>>.div(d: T<T<F<T<Ø>>>>) = F(T(F(T(Ø))))
@JvmName("b110d22") operator fun F<T<T<T<F<T<T<Ø>>>>>>>.div(d: F<T<T<F<T<Ø>>>>>) = T(F(T(Ø)))
@JvmName("b110d55") operator fun F<T<T<T<F<T<T<Ø>>>>>>>.div(d: T<T<T<F<T<T<Ø>>>>>>) = F(T(Ø))
@JvmName("b111d3") operator fun T<T<T<T<F<T<T<Ø>>>>>>>.div(d: T<T<Ø>>) = T(F(T(F(F(T(Ø))))))
@JvmName("b111d37") operator fun T<T<T<T<F<T<T<Ø>>>>>>>.div(d: T<F<T<F<F<T<Ø>>>>>>) = T(T(Ø))
@JvmName("b112d7") operator fun F<F<F<F<T<T<T<Ø>>>>>>>.div(d: T<T<T<Ø>>>) = F(F(F(F(T(Ø)))))
@JvmName("b112d14") operator fun F<F<F<F<T<T<T<Ø>>>>>>>.div(d: F<T<T<T<Ø>>>>) = F(F(F(T(Ø))))
@JvmName("b112d28") operator fun F<F<F<F<T<T<T<Ø>>>>>>>.div(d: F<F<T<T<T<Ø>>>>>) = F(F(T(Ø)))
@JvmName("b112d56") operator fun F<F<F<F<T<T<T<Ø>>>>>>>.div(d: F<F<F<T<T<T<Ø>>>>>>) = F(T(Ø))
@JvmName("b114d3") operator fun F<T<F<F<T<T<T<Ø>>>>>>>.div(d: T<T<Ø>>) = F(T(T(F(F(T(Ø))))))
@JvmName("b114d6") operator fun F<T<F<F<T<T<T<Ø>>>>>>>.div(d: F<T<T<Ø>>>) = T(T(F(F(T(Ø)))))
@JvmName("b114d19") operator fun F<T<F<F<T<T<T<Ø>>>>>>>.div(d: T<T<F<F<T<Ø>>>>>) = F(T(T(Ø)))
@JvmName("b114d38") operator fun F<T<F<F<T<T<T<Ø>>>>>>>.div(d: F<T<T<F<F<T<Ø>>>>>>) = T(T(Ø))
@JvmName("b114d57") operator fun F<T<F<F<T<T<T<Ø>>>>>>>.div(d: T<F<F<T<T<T<Ø>>>>>>) = F(T(Ø))
@JvmName("b115d5") operator fun T<T<F<F<T<T<T<Ø>>>>>>>.div(d: T<F<T<Ø>>>) = T(T(T(F(T(Ø)))))
@JvmName("b115d23") operator fun T<T<F<F<T<T<T<Ø>>>>>>>.div(d: T<T<T<F<T<Ø>>>>>) = T(F(T(Ø)))
@JvmName("b116d29") operator fun F<F<T<F<T<T<T<Ø>>>>>>>.div(d: T<F<T<T<T<Ø>>>>>) = F(F(T(Ø)))
@JvmName("b116d58") operator fun F<F<T<F<T<T<T<Ø>>>>>>>.div(d: F<T<F<T<T<T<Ø>>>>>>) = F(T(Ø))
@JvmName("b117d3") operator fun T<F<T<F<T<T<T<Ø>>>>>>>.div(d: T<T<Ø>>) = T(T(T(F(F(T(Ø))))))
@JvmName("b117d9") operator fun T<F<T<F<T<T<T<Ø>>>>>>>.div(d: T<F<F<T<Ø>>>>) = T(F(T(T(Ø))))
@JvmName("b117d13") operator fun T<F<T<F<T<T<T<Ø>>>>>>>.div(d: T<F<T<T<Ø>>>>) = T(F(F(T(Ø))))
@JvmName("b117d39") operator fun T<F<T<F<T<T<T<Ø>>>>>>>.div(d: T<T<T<F<F<T<Ø>>>>>>) = T(T(Ø))
@JvmName("b118d59") operator fun F<T<T<F<T<T<T<Ø>>>>>>>.div(d: T<T<F<T<T<T<Ø>>>>>>) = F(T(Ø))
@JvmName("b119d7") operator fun T<T<T<F<T<T<T<Ø>>>>>>>.div(d: T<T<T<Ø>>>) = T(F(F(F(T(Ø)))))
@JvmName("b119d17") operator fun T<T<T<F<T<T<T<Ø>>>>>>>.div(d: T<F<F<F<T<Ø>>>>>) = T(T(T(Ø)))
@JvmName("b120d3") operator fun F<F<F<T<T<T<T<Ø>>>>>>>.div(d: T<T<Ø>>) = F(F(F(T(F(T(Ø))))))
@JvmName("b120d5") operator fun F<F<F<T<T<T<T<Ø>>>>>>>.div(d: T<F<T<Ø>>>) = F(F(F(T(T(Ø)))))
@JvmName("b120d6") operator fun F<F<F<T<T<T<T<Ø>>>>>>>.div(d: F<T<T<Ø>>>) = F(F(T(F(T(Ø)))))
@JvmName("b120d10") operator fun F<F<F<T<T<T<T<Ø>>>>>>>.div(d: F<T<F<T<Ø>>>>) = F(F(T(T(Ø))))
@JvmName("b120d12") operator fun F<F<F<T<T<T<T<Ø>>>>>>>.div(d: F<F<T<T<Ø>>>>) = F(T(F(T(Ø))))
@JvmName("b120d15") operator fun F<F<F<T<T<T<T<Ø>>>>>>>.div(d: T<T<T<T<Ø>>>>) = F(F(F(T(Ø))))
@JvmName("b120d20") operator fun F<F<F<T<T<T<T<Ø>>>>>>>.div(d: F<F<T<F<T<Ø>>>>>) = F(T(T(Ø)))
@JvmName("b120d24") operator fun F<F<F<T<T<T<T<Ø>>>>>>>.div(d: F<F<F<T<T<Ø>>>>>) = T(F(T(Ø)))
@JvmName("b120d30") operator fun F<F<F<T<T<T<T<Ø>>>>>>>.div(d: F<T<T<T<T<Ø>>>>>) = F(F(T(Ø)))
@JvmName("b120d40") operator fun F<F<F<T<T<T<T<Ø>>>>>>>.div(d: F<F<F<T<F<T<Ø>>>>>>) = T(T(Ø))
@JvmName("b120d60") operator fun F<F<F<T<T<T<T<Ø>>>>>>>.div(d: F<F<T<T<T<T<Ø>>>>>>) = F(T(Ø))
@JvmName("b121d11") operator fun T<F<F<T<T<T<T<Ø>>>>>>>.div(d: T<T<F<T<Ø>>>>) = T(T(F(T(Ø))))
@JvmName("b122d61") operator fun F<T<F<T<T<T<T<Ø>>>>>>>.div(d: T<F<T<T<T<T<Ø>>>>>>) = F(T(Ø))
@JvmName("b123d3") operator fun T<T<F<T<T<T<T<Ø>>>>>>>.div(d: T<T<Ø>>) = T(F(F(T(F(T(Ø))))))
@JvmName("b123d41") operator fun T<T<F<T<T<T<T<Ø>>>>>>>.div(d: T<F<F<T<F<T<Ø>>>>>>) = T(T(Ø))
@JvmName("b124d31") operator fun F<F<T<T<T<T<T<Ø>>>>>>>.div(d: T<T<T<T<T<Ø>>>>>) = F(F(T(Ø)))
@JvmName("b124d62") operator fun F<F<T<T<T<T<T<Ø>>>>>>>.div(d: F<T<T<T<T<T<Ø>>>>>>) = F(T(Ø))
@JvmName("b125d5") operator fun T<F<T<T<T<T<T<Ø>>>>>>>.div(d: T<F<T<Ø>>>) = T(F(F(T(T(Ø)))))
@JvmName("b125d25") operator fun T<F<T<T<T<T<T<Ø>>>>>>>.div(d: T<F<F<T<T<Ø>>>>>) = T(F(T(Ø)))
@JvmName("b126d3") operator fun F<T<T<T<T<T<T<Ø>>>>>>>.div(d: T<T<Ø>>) = F(T(F(T(F(T(Ø))))))
@JvmName("b126d6") operator fun F<T<T<T<T<T<T<Ø>>>>>>>.div(d: F<T<T<Ø>>>) = T(F(T(F(T(Ø)))))
@JvmName("b126d7") operator fun F<T<T<T<T<T<T<Ø>>>>>>>.div(d: T<T<T<Ø>>>) = F(T(F(F(T(Ø)))))
@JvmName("b126d9") operator fun F<T<T<T<T<T<T<Ø>>>>>>>.div(d: T<F<F<T<Ø>>>>) = F(T(T(T(Ø))))
@JvmName("b126d14") operator fun F<T<T<T<T<T<T<Ø>>>>>>>.div(d: F<T<T<T<Ø>>>>) = T(F(F(T(Ø))))
@JvmName("b126d18") operator fun F<T<T<T<T<T<T<Ø>>>>>>>.div(d: F<T<F<F<T<Ø>>>>>) = T(T(T(Ø)))
@JvmName("b126d21") operator fun F<T<T<T<T<T<T<Ø>>>>>>>.div(d: T<F<T<F<T<Ø>>>>>) = F(T(T(Ø)))
@JvmName("b126d42") operator fun F<T<T<T<T<T<T<Ø>>>>>>>.div(d: F<T<F<T<F<T<Ø>>>>>>) = T(T(Ø))
@JvmName("b126d63") operator fun F<T<T<T<T<T<T<Ø>>>>>>>.div(d: T<T<T<T<T<T<Ø>>>>>>) = F(T(Ø))

